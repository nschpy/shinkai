{
  "title": "HuggingFaceTB/SmolLM2-1.7B-supervised-lora-fine-tuning",
  "description": "–°—É–ø–µ—Ä–≤–∏–∑–æ—Ä–Ω–æ–µ –ø–æ–ª–Ω–æ–µ QLora –º–æ–¥–µ–ª–∏ HuggingFaceTB/SmolLM2-1.7B —Å –ø–æ—Å–ª–µ–¥—É—é—â–∏–º –∏–Ω—Ñ–µ—Ä–µ–Ω—Å–æ–º –∏ –æ—Ü–µ–Ω–∫–æ–π –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–º –Ω–∞–±–æ—Ä–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ –º–µ—Ç—Ä–∏–∫–∞–º BLEU –∏ ROUGE.",
  "metrics": {
    "BLEU": 0.45474244633948013,
    "ROUGE-L": 0.6574416019838283,
    "PREDICTIONS": [
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–¥—à–∏–º –≤ —Å–∏—Å—Ç–µ–º—É\n/// - Returns: `true` - –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª –≤ —Å–∏—Å—Ç–µ–º—É, `false` - –µ—Å–ª–∏ –Ω–µ—Ç\nfunc isUserLoggedIn() -> Bool {\n    guard let token = UserDefaults.standard.string(forKey: \"authToken\") else { return false }\n    // –ó–¥–µ—Å—å –º–æ–≥–ª–∞ –±—ã –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞\n    return !token.isEmpty\n}\n\n/// –ü–æ–ª—É—á–∞–µ—Ç —Ç–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n/// - Returns: —Ç–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\nfunc getAuthToken() -> String {\n    guard let token = UserDefaults.standard.string(forKey: \"authToken\") else { return \"\" }\n    return token\n",
      "//: [Next](@next)\n",
      "/// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–æ–ª–ª–∞—Ä–æ–≤\n/// - Parameter amount: –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ\nfunc formatCurrency(_ amount: Double) -> String {\n    let formatter = NumberFormatter()\n    formatter.numberStyle = .currency\n    formatter.currencySymbol = \"USD\"\n    formatter.locale = Locale(identifier: \"ru_RU\")\n    return formatter.string(from: NSNumber(value: amount)) ?? \"\\(amount) USD\"\n}\n\n/// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∫–æ–ø–µ–µ–∫\n/// - Parameter amount: –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ",
      "/// –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å —Å–æ–±—ã—Ç–∏–µ–º –Ω–∞ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ.\n/// - Parameter message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.\nfunc sendLocalPush(message: String) {\n    let content = UNMutableNotificationContent()\n    content.body = message\n    let trigger = UNTimeIntervalNotificationTrigger(timeInterval: 1, repeats: false)\n    let request = UNNotificationRequest(identifier: UUID().uuidString, content: content, trigger: trigger)\n    UNUserNotificationCenter.current().add(request)\n}\n",
      "// MARK: - Public\n\nfunc showOnboarding() {\n    let onboardingVC = OnboardingViewController()\n    onboardingVC.modalPresentationStyle = .fullScreen\n    present(onboardingVC, animated: true)\n}\n\nfunc hideOnboarding() {\n    UserDefaults.standard.set(true, forKey: \"onboardingShown\")\n}\n\nfunc showMainViewController() {\n    let mainViewController = MainViewController()\n    mainViewController.modalPresentationStyle = .fullScreen\n    present(mainViewController, animated: true)\n}\n",
      "/// –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–æ–¥—É–∫—Ç, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—ã–ª–æ –ø–æ—Å–º–æ—Ç—Ä–µ–Ω–æ.\n/// - Parameter productId: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–¥—É–∫—Ç–∞.\nfunc saveLastViewedProduct(_ productId: String) {\n    UserDefaults.standard.set(productId, forKey: \"lastViewedProduct\")\n}\n\n\n/// –ü–æ–ª—É—á–∞–µ—Ç –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—ã–ª–æ –ø–æ—Å–º–æ—Ç—Ä–µ–Ω–æ.\n/// - Returns: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–¥—É–∫—Ç–∞.\nfunc getLastViewedProductId() -> String? {\n    return UserDefaults.standard.string(forKey: \"lastViewedProduct\")\n}\n",
      "/// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ø–∞–ø –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –≤ –º–µ—Å—Ç–Ω–æ—Å—Ç–∏\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–ø–∞–ø\nfunc shouldShowWelcomeBanner() -> Bool {\n    let lastShown = UserDefaults.standard.object(forKey: \"lastWelcomeShown\") as? Date ?? .distantPast\n    return Date().timeIntervalSince(lastShown) > 86400\n}\n\n/// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ø–∞–ø –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –≤ –º–µ—Å—Ç–Ω–æ—Å—Ç–∏\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–ø–∞–ø\nfunc shouldShowWelcomeBanner() -> Bool {\n    let lastShown = UserDefaults.standard.object(forKey: \"lastWelcomeShown\") as? Date ?? .distantPast\n    return Date().timeIntervalSince(lastSh",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏.\n/// - Parameters:\n///   - lat: –®–∏—Ä–æ—Ç–∞.\n///   - lon: –î–æ–ª–≥–æ—Ç–∞.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏.\nfunc coordinatesToString(lat: Double, lon: Double) -> String {\n    return String(format: \"üìç %.4f, %.4f\", lat, lon)\n}\n\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏.\n/// - Parameters:\n///   - lat: –®–∏—Ä–æ—Ç–∞.\n///   - lon: –î–æ–ª–≥–æ—Ç–∞.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏.\nfunc coordinatesToString(lat: Double, lon: Double) -> String {\n    return String(format: \"üìç %.4f, %.4f\", lat, lon",
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–∞–ª–∏–¥–Ω—ã–º.\n/// - Parameter profile: –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç `true`, –µ—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º.\nfunc isUserProfileComplete(profile: [String: String]) -> Bool {\n    let requiredKeys = [\"firstName\", \"lastName\", \"email\"]\n    return requiredKeys.allSatisfy { !(profile[$0]?.isEmpty ?? true) }\n}\n\n\n/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–∞–ª–∏–¥–Ω—ã–º.\n/// - Parameter profile: –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n/// - Returns:",
      "",
      "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥ –≤ —Å—Ç—Ä–æ–∫—É —Å —á–∏—Å–ª–æ–º –∑–≤–µ–∑–¥\n/// - Parameter rating: –†–µ–π—Ç–∏–Ω–≥\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Å —á–∏—Å–ª–æ–º –∑–≤–µ–∑–¥\nfunc starsForRating(_ rating: Double) -> String {\n    let filledStars = Int(rating)\n    let emptyStars = 5 - filledStars\n    return String(repeating: \"‚òÖ\", count: filledStars) + String(repeating: \"‚òÜ\", count: emptyStars)\n}\n",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –µ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ\nfunc isInternetAvailable() -> Bool {\n    // –£–ø—Ä–æ—â—ë–Ω–Ω–æ, –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ ‚Äî —Ä–µ–∞–ª—å–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ç—Ä–µ–±—É–µ—Ç Reachability\n    return true\n}\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –µ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ\nfunc isInternetAvailable() -> Bool {\n    // –£–ø—Ä–æ—â—ë–Ω–Ω–æ, –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ ‚Äî —Ä–µ–∞–ª—å–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ç—Ä–µ–±—É–µ—Ç Reachability\n    return true\n}\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –µ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ\nfunc isInternetAvailable() -> Bool {\n    // –£–ø—Ä–æ—â—ë–Ω–Ω–æ, –¥–ª",
      "/// –í—ã–≤–æ–¥–∏—Ç —Å—Ç–∞—Ç—É—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–∞ —Å–∞–π—Ç–µ\n/// - Parameter deliveryDate: –î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏\nfunc deliveryStatus(for deliveryDate: Date) -> String {\n    let calendar = Calendar.current\n    if calendar.isDateInToday(deliveryDate) {\n        return \"–°–µ–≥–æ–¥–Ω—è\"\n    } else if calendar.isDateInTomorrow(deliveryDate) {\n        return \"–ó–∞–≤—Ç—Ä–∞\"\n    } else {\n        return \"–ü–æ–∑–∂–µ\"\n    }\n}\n\n/// –í—ã–≤–æ–¥–∏—Ç —Å—Ç–∞—Ç—É—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–∞ —Å–∞–π—Ç–µ\n/// - Parameter deliveryDate: –î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏\nfunc deliveryStatus(for deliveryDate: Date) -> String {\n    let calendar = Calendar.current\n    if calendar.isDateInToday(deliveryDate) {\n        return \"–°–µ–≥–æ–¥–Ω—è\"\n    } else if calendar.isDateInTomorrow(deliveryDate) {\n        return \"–ó–∞–≤—Ç—Ä–∞\"\n    } else",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –∏–º–µ–Ω–∞–º–∏ —Ç–µ–≥–æ–≤.\n/// - Parameter tags: –ú–∞—Å—Å–∏–≤ —Ç–µ–≥–æ–≤.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Å –∏–º–µ–Ω–∞–º–∏ —Ç–µ–≥–æ–≤.\nfunc hashtags(from tags: [String]) -> String {\n    return tags.map { \"#\\($0.lowercased())\" }.joined(separator: \" \")\n}\n",
      "func getScrollOffset() -> Double {\n    return UserDefaults.standard.double(forKey: \"productListScrollOffset\")\n}\n\nfunc deleteAllData() {\n    let realm = try! Realm()\n    try! realm.write {\n        realm.deleteAll()\n    }\n}\n\nfunc deleteAllProducts() {\n    let realm = try! Realm()\n    try! realm.write {\n        realm.deleteAll()\n    }\n}\n\nfunc deleteAllReviews() {\n    let realm = try! Realm()\n    try! realm.write {\n        realm.deleteAll()\n    }\n}\n\nfunc deleteAllProductsAndReviews() {\n    let realm = try! Realm()\n    try! realm.write {\n        realm.deleteAll()\n    }\n}\n\nfunc deleteAllData() {\n    deleteAllProducts()\n    deleteAllReviews()\n    deleteAllProductsAndReviews()\n}\n\nfunc deleteAllProductsAndReviews() {\n    let realm = try! Realm()\n    try! realm.write {\n        realm.deleteAll()\n    }\n}\n\nfunc deleteAllReviews() {\n    let realm =",
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ —Ç–æ—á–∫–∞ –≤ –¥–æ—Å—Ç–∞–≤–∫–æ–≤—ã—Ö –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –æ–±–ª–∞—Å—Ç—è—Ö.\n/// - Parameters:\n///   - lat: –®–∏—Ä–æ—Ç–∞.\n///   - lon: –î–æ–ª–≥–æ—Ç–∞.\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç `true` –µ—Å–ª–∏ —Ç–æ—á–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥–æ—Å—Ç–∞–≤–∫–æ–≤–æ–π –æ–±–ª–∞—Å—Ç–∏.\nfunc isWithinDeliveryZone(lat: Double, lon: Double) -> Bool {\n    let center = (lat: 55.75, lon: 37.61) // –ú–æ—Å–∫–≤–∞\n    let radiusKm = 30.0\n    let distance = sqrt(pow(center.lat - lat, 2) + pow(center.lon - lon, 2)) * 111\n    return distance < radiusKm\n}\n",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç nil.\n/// - Parameter productId: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–¥—É–∫—Ç–∞.\n/// - Returns: –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç nil.\nfunc generateProductDeeplink(productId: String) -> URL? {\n    return URL(string: \"myapp://product/\\(productId)\")\n}\n",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω—è—è –æ—Ç–∫—Ä—ã—Ç–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–æ–≤–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é.\n/// - Parameters:\n///   - lastViewedId: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—Ç–∫—Ä—ã—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã.\n///   - newMessageId: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.\n/// - Returns: true, –µ—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω—è—è –æ—Ç–∫—Ä—ã—Ç–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–æ–≤–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é.\nfunc hasNewSupportMessage(lastViewedId: String, newMessageId: String) -> Bool {\n    return lastViewedId != newMessageId\n}\n",
      "",
      "",
      "//: ## –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ ‚Ññ2\n//: –î–æ–±–∞–≤—å—Ç–µ –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –ø—Ä–∏–º–µ—Ä –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ï—Å–ª–∏ –∏–º—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Ç–æ –≤—ã–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.\n\n//: –ü—Ä–∏–º–µ—Ä:\n\nlet name = \"–ü–µ—Ç—è\"\n\nif name.isEmpty {\n    print(\"–ò–º—è \\(name) –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.\")\n} else {\n    print(\"–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, \\(name)\")\n}\n\n\n//: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n\nlet name2 = \"–ü–µ—Ç—è\"\n\nif name2.isEmpty",
      "",
      "/// –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–∞ —Å–≤–æ—é –ø–æ—á—Ç—É\n/// - Parameter message: –¢–µ–∫—Å—Ç –ø–∏—Å—å–º–∞\nfunc sendLocalPush(message: String) {\n    let content = UNMutableNotificationContent()\n    content.body = message\n    let trigger = UNTimeIntervalNotificationTrigger(timeInterval: 1, repeats: false)\n    let request = UNNotificationRequest(identifier: UUID().uuidString, content: content, trigger: trigger)\n    UNUserNotificationCenter.current().add(request)\n}\n\n/// –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–∞ —Å–≤–æ—é –ø–æ—á—Ç—É\n/// - Parameter message: –¢–µ–∫—Å—Ç –ø–∏—Å—å–º–∞\nfunc sendLocalPush(message: String) {\n    let content = UNMutableNotificationContent()\n    content.body = message\n    let trigger = UNTimeIntervalNotificationTrigger(timeInterval: 1, repeats: false)\n    let request = UNNotificationRequest(identifier: UUID",
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —Å–µ—Å—Å–∏—è —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏.\n/// - Returns: –ï—Å—Ç—å –ª–∏ —Å–µ—Å—Å–∏—è.\nfunc shouldShowOnboarding() -> Bool {\n    return !UserDefaults.standard.bool(forKey: \"onboardingShown\")\n}\n\n/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —Å–µ—Å—Å–∏—è —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏.\n/// - Returns: –ï—Å—Ç—å –ª–∏ —Å–µ—Å—Å–∏—è.\nfunc shouldShowOnboarding() -> Bool {\n    return !UserDefaults.standard.bool(forKey: \"onboardingShown\")\n}\n\n/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —Å–µ—Å—Å–∏—è —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏.\n/// - Returns: –ï—Å—Ç—å –ª–∏ —Å–µ—Å—Å–∏—è.\nfunc shouldShowOnboarding() -> Bool {\n    return !UserDefaults.standard.bool(forKey: \"onboardingShown\")\n}\n\n",
      "/// –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ—Å–µ—â–µ–Ω–Ω–æ–µ —Ç–æ–≤–∞—Ä\n/// - Parameter completion: –î–µ–π—Å—Ç–≤–∏–µ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è\nfunc getLastViewedProduct(_ completion: @escaping (String?) -> Void) {\n    guard let productId = UserDefaults.standard.string(forKey: \"lastViewedProduct\") else {\n        completion(nil)\n        return\n    }\n    completion(productId)\n}\n\n\n/// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ—Å–µ—â–µ–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞\nfunc checkLastViewedProduct() -> Bool {\n    return UserDefaults.standard.string(forKey: \"lastViewedProduct\") != nil\n}\n",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –∏–∑ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏ —Å—Ç–∞—Ä—Ç–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã\n/// - Returns: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏\nfunc getLastMessage() -> String? {\n    guard let jsonData = UserDefaults.standard.object(forKey: \"lastMessage\") as? Data else { return nil }\n    guard let json = try? JSONSerialization.jsonObject(with: jsonData, options: []) as? [String: Any] else { return nil }\n    guard let lastMessage = json[\"lastMessage\"] as? String else { return nil }\n    return lastMessage\n}\n\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –∏–∑ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏ —Å—Ç–∞—Ä—Ç–æ–≤–æ–π —Å—Ç",
      "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ —Å—Ç—Ä–æ–∫—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –≤–∏–¥–µ –∫–∞—Ä—Ç—ã.\n/// - Parameters:\n///   - lat: –®–∏—Ä–æ—Ç–∞.\n///   - lon: –î–æ–ª–≥–æ—Ç–∞.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –≤–∏–¥–µ –∫–∞—Ä—Ç—ã.\nfunc coordinatesToString(lat: Double, lon: Double) -> String {\n    return String(format: \"üìç %.4f, %.4f\", lat, lon)\n}\n",
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ª—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å.\n/// - Parameter profile: –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n/// - Returns: `true`, –µ—Å–ª–∏ –ø–æ–ª—è –ø—Ä–æ—Ñ–∏–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã.\nfunc isUserProfileComplete(profile: [String: String]) -> Bool {\n    let requiredKeys = [\"firstName\", \"lastName\", \"email\"]\n    return requiredKeys.allSatisfy { !(profile[$0]?.isEmpty ?? true) }\n}\n\n/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ª—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å.\n/// - Parameter profile: –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n/// - Returns: `true`, –µ—Å–ª–∏ –ø–æ–ª—è –ø—Ä–æ—Ñ–∏–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã.\nfunc isUserProfileComplete",
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +79999999999.\n/// - Parameter phone: –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç `true`, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ `phone` —è–≤–ª—è–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +79999999999.\nfunc isValidRussianPhoneNumber(_ phone: String) -> Bool {\n    let pattern = \"^\\\\+7\\\\d{10}$\"\n    return phone.range(of: pattern, options: .regularExpression) != nil\n}\n\n\n/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å —Ñ–∞–º–∏–ª–∏–µ–π –∏ –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω–∏ –∑–∞–¥–∞–Ω—ã –≤ –ø–æ–ª—è—Ö `firstName` –∏ `lastName` –∏–ª–∏ `firstName` –∏ `middleName` –µ—Å–ª–∏ –æ–Ω–∏ –∑–∞–¥–∞–Ω—ã –≤ –ø–æ–ª—è—Ö `firstName` –∏ `middleName`.\n/// - Parameter user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Å —Ñ–∞–º–∏–ª–∏–µ–π –∏ –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\nfunc userName(_ user: User) -> String {\n    guard user.firstName != nil && user.lastName != nil else {\n        return \"\\(user.firstName ?? \"\") \\(user.middleName ?? \"\")\"\n    }\n    return \"\\(user.firstName ?? \"\") \\(user.lastName ?? \"\")\"\n}\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å —Ñ–∞–º",
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç `true` –µ—Å–ª–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç\nfunc isInternetAvailable() -> Bool {\n    // –£–ø—Ä–æ—â—ë–Ω–Ω–æ, –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ ‚Äî —Ä–µ–∞–ª—å–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ç—Ä–µ–±—É–µ—Ç Reachability\n    return true\n}\n\n\n/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç `true` –µ—Å–ª–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç\nfunc isInternetAvailable() -> Bool {\n    // –£–ø—Ä–æ—â—ë–Ω–Ω–æ, –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ ‚Äî —Ä–µ–∞–ª—å–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ç—Ä–µ–±—É–µ—Ç Reachability\n    return true\n}\n",
      "/// –í—ã–≤–æ–¥–∏—Ç —Å—Ç—Ä–æ–∫—É —Å —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∞—Ç–æ–π\n/// - Parameter date: –í—Ä–µ–º—è\nfunc deliveryDateString(for date: Date) -> String {\n    let calendar = Calendar.current\n    let components = calendar.dateComponents([.year, .month, .day], from: date)\n    return \"\\(components.year!)-\\(components.month!)-\\(components.day!)\"\n}\n",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏–∑ —Ö—ç—à-—Ç–µ–≥–æ–≤ –∏–∑ –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫.\n/// - Parameter tags: –ú–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫.\n/// - Returns: –•—ç—à-—Ç–µ–≥–∏.\nfunc hashtags(from tags: [String]) -> String {\n    return tags.map { \"#\\($0.lowercased())\" }.joined(separator: \" \")\n}\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏–∑ —Ö—ç—à-—Ç–µ–≥–æ–≤ –∏–∑ –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫.\n/// - Parameter tags: –ú–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫.\n/// - Returns: –•—ç—à-—Ç–µ–≥–∏.\nfunc hashtags(from tags: [String]) -> String {\n    return tags.map { \"#\\($0.lowercased())\" }.joined(separator: \" \")\n}\n\n/// –í–æÔøΩ",
      "/// –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–∫—Ä–æ–ª–ª –≤ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ\n/// - Parameter offset: –°–∫—Ä–æ–ª–ª\nfunc saveScrollOffset(_ offset: Double) {\n    UserDefaults.standard.set(offset, forKey: \"productListScrollOffset\")\n}\n\n/// –ü–æ–ª—É—á–∞–µ—Ç —Å–∫—Ä–æ–ª–ª –≤ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ\n/// - Returns: –°–∫—Ä–æ–ª–ª\nfunc getScrollOffset() -> Double {\n    return UserDefaults.standard.double(forKey: \"productListScrollOffset\")\n}\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–∑–∏—Ü–∏—é —Å–∫—Ä–æ–ª–ª–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É\n/// - Returns: –°–∫—Ä–æ–ª–ª\nfunc getScrollOffsetAfterNextPage() -> Double {\n    let currentPage = Int(getCurrentPage())\n    let totalPages = Int(getTotalPages())\n    let currentOffset = getScrollOffset()\n    let currentPageOffset = Double(current",
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ —Ç–æ—á–∫–∞ –≤ –¥–æ—Å—Ç–∞–≤–∫–æ–≤—ã–π —Ä–∞–¥–∏—É—Å.\n/// - Parameters:\n///   - lat: –®–∏—Ä–æ—Ç–∞ —Ç–æ—á–∫–∏.\n///   - lon: –î–æ–ª–≥–æ—Ç–∞ —Ç–æ—á–∫–∏.\n/// - Returns: `true`, –µ—Å–ª–∏ —Ç–æ—á–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥–æ—Å—Ç–∞–≤–∫–æ–≤–æ–º —Ä–∞–¥–∏—É—Å–µ.\nfunc isWithinDeliveryZone(lat: Double, lon: Double) -> Bool {\n    let center = (lat: 55.75, lon: 37.61) // –ú–æ—Å–∫–≤–∞\n    let radiusKm = 30.0\n    let distance = sqrt(pow(center.lat - lat, 2) + pow(center.lon - lon, 2)) * 111\n    return distance < radiusKm\n}\n\n/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ —Ç–æ—á–∫–∞ –≤ –¥–æ",
      "/// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç URL –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞ –ø–æ –µ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É.\n/// - Parameter productId: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–¥—É–∫—Ç–∞.\n/// - Returns: URL –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞.\nfunc generateProductDeeplink(productId: String) -> URL? {\n    return URL(string: \"myapp://product/\\(productId)\")\n}\n\n\n/// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç URL –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞ –ø–æ –µ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É.\n/// - Parameter productId: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–¥—É–∫—Ç–∞.\n/// - Returns: URL –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞.\nfunc generateProductDeeplink(productId: String) -> URL? {\n    return URL(string: \"myapp://product/\\(productId)\")\n}\n\n\n/// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç URL",
      "func newMessage(lastViewedId: String, newMessageId: String) -> Message {\n    return Message(\n        id: newMessageId,\n        date: Date(),\n        text: \"New message\",\n        lastViewedId: lastViewedId\n    )\n}\n",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –º–∏–Ω—É—Ç –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã\n/// - Parameters:\n///   - current: –í—Ä–µ–º—è, –∫–æ—Ç–æ—Ä–æ–µ —É–∂–µ –ø—Ä–æ—à–ª–æ\n///   - target: –í—Ä–µ–º—è, –∫–æ—Ç–æ—Ä–æ–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏–≥—Ä–∞—Ç—å—Å—è\n/// - Returns: –ü—Ä–æ—Ü–µ–Ω—Ç –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –º–∏–Ω—É—Ç\nfunc progressPercentage(current: Double, target: Double) -> Int {\n    guard target > 0 else { return 0 }\n    return min(Int((current / target) * 100), 100)\n}\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Å–µ–∫—É–Ω–¥ –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã\n/// - Parameters:\n///   - current: –í—Ä–µ–º",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç URL –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —É—Å–ª–æ–≤–∏–π –∏ —Å–ª—É–∂–±\n/// - Parameter locale: –Ø–∑—ã–∫ –∫–æ–¥–∞\n/// - Returns: URL –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —É—Å–ª–æ–≤–∏–π –∏ —Å–ª—É–∂–±\nfunc termsAndConditionsURL(locale: String) -> URL? {\n    let locale = Locale.current.languageCode ?? \"en\"\n    return URL(string: \"https://example.com/terms_\\(locale).html\")\n}\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç URL –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —É—Å–ª–æ–≤–∏–π –∏ —Å–ª—É–∂–±\n/// - Parameter locale: –Ø–∑—ã–∫ –∫–æ–¥–∞\n/// - Returns: URL –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —É—Å–ª–æ–≤–∏–π –∏ —Å–ª—É–∂–±\nfunc termsAndConditionsURL(_ locale: String) -> URL? {\n    let locale = Locale.current.languageCode ?? \"en\"\n    return URL(string: \"https",
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–∞—Ç–∞ –ø–µ—Ä–≤—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º –≤ –º–∞—Å—Å–∏–≤–µ –¥–∞—Ç\n/// - Parameter date: –î–∞—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç `true`, –µ—Å–ª–∏ –¥–∞—Ç–∞ —è–≤–ª—è–µ—Ç—Å—è –ø–µ—Ä–≤—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º –≤ –º–∞—Å—Å–∏–≤–µ\nfunc isFirstElement(at date: Date) -> Bool {\n    return Date() >= date\n}\n\n\n/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤ –º–∞—Å—Å–∏–≤–µ –¥–∞—Ç\n/// - Parameter date: –î–∞—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç `true`, –µ—Å–ª–∏ –¥–∞—Ç–∞ —è–≤–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤ –º–∞—Å",
      "",
      "/// –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n/// - Returns: –¢–µ–º–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\nfunc getUserTheme() -> String? {\n    return UserDefaults.standard.string(forKey: \"appTheme\")\n}\n\n/// –ü–æ–ª—É—á–∏—Ç—å —Ñ–ª–∞–≥ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n/// - Returns: –§–ª–∞–≥ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\nfunc getUserThemePrefer() -> Bool {\n    return UserDefaults.standard.bool(forKey: \"appThemePrefer\")\n}\n\n/// –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n/// - Returns: –¢–µ–º–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\nfunc getUserTheme() -> String? {\n    return UserDefaults.standard.string(forKey: \"appTheme\")\n}\n\n/// ÔøΩ",
      "",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –æ—Ç–∑—ã–≤–∞.\n/// - Parameter user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.\n/// - Returns: –ö–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –æ—Ç–∑—ã–≤–∞.\nfunc generateFeedbackContent(_ user: User) -> String {\n    return \"–û—Ç–ª–∏—á–Ω–æ! –í–∞—à –æ—Ç–∑—ã–≤ –æ—Ç—Ä–∞–∂–∞–µ—Ç—Å—è –∫–∞–∫ –ª—É—á—à–µ–µ. –î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É \\\"–û–±–Ω–æ–≤–∏—Ç—å –≤–∞—à –æ—Ç–∑—ã–≤\\\".\\n\\n–í–∞—à–µ –æ—Ç–∑—ã–≤:\\n\\(user.feedback)\"\n}\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –æ—Ç–∑—ã–≤–∞.\n/// - Parameter user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.\n/// - Returns: –ö–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –æ—Ç–∑—ã–≤–∞",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ–ª—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è.\n/// - Parameter count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π.\n/// - Returns: true, –µ—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ–ª—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è.\nfunc hasReachedFreeLimit(count: Int) -> Bool {\n    let limit = 5\n    return count >= limit\n}\n",
      "/// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É –≤ —Å—Ç—Ä–æ–∫—É.\n/// - Parameter date: –î–∞—Ç–∞.\n/// - Returns: –î–∞—Ç–∞ –≤ —Å—Ç—Ä–æ–∫—É.\nfunc formatOrderDate(_ date: Date) -> String {\n    let formatter = DateFormatter()\n    formatter.dateFormat = \"dd MMM yyyy\"\n    return formatter.string(from: date)\n}\n\n/// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É –≤ —Å—Ç—Ä–æ–∫—É.\n/// - Parameter date: –î–∞—Ç–∞.\n/// - Returns: –î–∞—Ç–∞ –≤ —Å—Ç—Ä–æ–∫—É.\nfunc formatOrderDate(_ date: Date) -> String {\n    let formatter = DateFormatter()\n    formatter.dateFormat = \"dd MMM yyyy\"\n    return formatter.string(from: date)\n}\n\n\n/// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É –≤ —Å—Ç—Ä–æ–∫—É.\n/// - Parameter date: –î–∞—Ç–∞.\n/// - Returns: –î–∞—Ç–∞ –≤ —Å—Ç—Ä–æÔøΩ",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –¥–∞—Ç–∞–º–∏ –≤ –¥–Ω—è—Ö.\n/// - Parameters:\n///   - from: –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –æ—Ç—Å—á—ë—Ç–∞.\n///   - to: –í—Ä–µ–º—è –∫–æ–Ω—Ü–∞ –æ—Ç—Å—á—ë—Ç–∞.\n/// - Returns: –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –¥–∞—Ç–∞–º–∏ –≤ –¥–Ω—è—Ö.\nfunc daysBetween(_ from: Date, _ to: Date) -> Int {\n    return Calendar.current.dateComponents([.day], from: from, to: to).day ?? 0\n}\n\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –¥–∞—Ç–∞–º–∏ –≤ –¥–Ω—è—Ö.\n/// - Parameters:\n///   - from: –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –æ—Ç—Å—á—ë—Ç–∞.\n///   - to: –í—Ä–µ–º—è –∫–æ–Ω—Ü–∞ –æ—Ç—Å—á—ë—Ç–∞",
      "/// –ó–∞–ø–æ–º–∏–Ω–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤–∏–¥–∞–Ω–æ–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –±–∞–Ω–Ω–µ—Ä–∞.\n/// - Parameter id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –±–∞–Ω–Ω–µ—Ä–∞.\nfunc saveLastSeenBannerId(_ id: String) {\n    UserDefaults.standard.set(id, forKey: \"lastSeenBannerId\")\n}\n\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤–∏–¥–∞–Ω–æ–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –±–∞–Ω–Ω–µ—Ä–∞.\n/// - Returns: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –±–∞–Ω–Ω–µ—Ä–∞.\nfunc getLastSeenBannerId() -> String? {\n    return UserDefaults.standard.string(forKey: \"lastSeenBannerId\")\n}\n\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤–∏–¥–∞–Ω–æ–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –±–∞–Ω–Ω–µ—Ä–∞.\n///",
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –æ–±–Ω–æ–≤–ª—è–ª–∏—Å—å –∑–∞ 6 —á–∞—Å–æ–≤.\n/// - Parameter lastUpdate: –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –æ–±–Ω–æ–≤–ª—è–ª–∏—Å—å –∑–∞ 6 —á–∞—Å–æ–≤.\nfunc shouldRefreshCache(since lastUpdate: Date) -> Bool {\n    return Date().timeIntervalSince(lastUpdate) > 6 * 3600\n}\n",
      "// MARK: - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –≤ –ë–î\nfunc isUserLoggedIn() -> Bool {\n    guard let token = UserDefaults.standard.string(forKey: \"authToken\") else { return false }\n    return !token.isEmpty\n}\n\n// MARK: - –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ë–î\nfunc getAuthToken() -> String? {\n    guard let token = UserDefaults.standard.string(forKey: \"authToken\") else { return nil }\n    return token\n}\n\n// MARK: - –ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è –∏–∑ –ë–î\nfunc getUserData() -> (login: String, password: String)? {\n    guard let userData = UserDefaults.standard.object(forKey: \"userData\") as? Data else { return nil }\n    let decoder = JSONDecoder()\n    return try? decoder.decode(UserData.self, from: userData)\n}\n\n// MARK: -",
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–º.\n/// - Parameter registrationDate: –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n/// - Returns: `true`, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π.\nfunc isNewUser(_ registrationDate: Date) -> Bool {\n    return Date().timeIntervalSince(registrationDate) < 7 * 86400\n}\n",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø—É—Å–∫–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n/// - Returns: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø—É—Å–∫–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\nfunc getAppLaunchCount() -> Int {\n    return UserDefaults.standard.integer(forKey: \"launchCount\")\n}\n\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –≤–∫–ª—é—á–µ–Ω–∏—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.\n/// - Returns: –°—Ç–∞—Ç—É—Å –≤–∫–ª—é—á–µ–Ω–∏—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.\nfunc getScriptDistributionDefaultStatus() -> Bool {\n    return UserDefaults.standard.bool(forKey: \"scriptDistributionDefaultStatus\")\n}\n\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –≤",
      "/// –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ 1\n/// - Tag: incrementAppLaunchCount\nfunc incrementAppLaunchCount() {\n    let count = getAppLaunchCount() + 1\n    UserDefaults.standard.set(count, forKey: \"launchCount\")\n}\n\n\n/// –ü–æ–ª—É—á–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n/// - Returns: –ó–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞\nfunc getAppLaunchCount() -> Int {\n    return UserDefaults.standard.integer(forKey: \"launchCount\")\n}\n",
      "func showAlert(_ message: String, title: String? = nil) {\n    let alertController = UIAlertController(title: title, message: message, preferredStyle: .alert)\n    alertController.addAction(UIAlertAction(title: \"OK\", style: .default, handler: nil))\n    UIApplication.shared.windows.first?.rootViewController?.present(alertController, animated: true, completion: nil)\n}\n\nfunc showError(_ message: String) {\n    showAlert(message)\n}\n\nfunc showSuccess(_ message: String) {\n    showAlert(message, title: \"Success\")\n}\n",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞—Ç—É, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∑–∞–¥–∞–Ω–Ω–æ–º—É –º–µ—Å—è—Ü—É.\n/// - Parameter month: –ú–µ—Å—è—Ü. –í–æ–∑–º–æ–∂–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: 1-12.\n/// - Returns: –î–∞—Ç–∞.\nfunc date(for month: Int) -> Date {\n    let formatter = DateFormatter()\n    formatter.locale = Locale(identifier: \"ru_RU\")\n    formatter.dateFormat = \"yyyy-MM-dd\"\n    return formatter.date(from: \"\\(year())-\\(monthName(for: month))\") ?? Date()\n}\n\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞—Ç—É, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∑–∞–¥–∞–Ω–Ω–æ–º—É –º–µ—Å—è—Ü—É.\n/// - Parameter month: –ú–µ—Å—è—Ü. –í–æ–∑–º–æ–∂–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: 1-12.\n/// - Returns: –î–∞—Ç–∞",
      "/// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É.\n/// - Parameter userId: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n/// - Returns: URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞.\nfunc ordersHistoryURL(for userId: String) -> URL? {\n    return URL(string: \"https://api.example.com/orders?user=\\(userId)\")\n}\n\n\n/// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É.\n/// - Parameter userId: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n/// - Returns: URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞.\nfunc ordersHistoryURL(for userId: String) -> URL? {\n    return URL(string: \"https://api.example.com/orders?user=\\(userId",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∏–∞–ª–æ–≥ —Å–æ —Å–≤–æ–π—Å—Ç–≤–æ–º \"–°–≤–µ—Ç–∏–ª—å–Ω–∏–∫\".\n/// - Returns: –î–∏–∞–ª–æ–≥ —Å–æ —Å–≤–æ–π—Å—Ç–≤–æ–º \"–°–≤–µ—Ç–∏–ª—å–Ω–∏–∫\".\nfunc isLightModeEnabled() -> Bool {\n    return UserDefaults.standard.bool(forKey: \"lightMode\")\n}\n",
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ—Å—Ç—É–ø –∫ –ª–æ–∫–∞—Ü–∏–∏\n/// - Returns: true, –µ—Å–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ\nfunc isLocationAccessGranted() -> Bool {\n    return CLLocationManager.authorizationStatus() == .authorizedWhenInUse || CLLocationManager.authorizationStatus() == .authorizedAlways\n}\n\n/// –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ª–æ–∫–∞—Ü–∏–∏\n/// - Parameter completion: –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑–≤–∞–Ω–Ω–∞—è –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è\nfunc requestLocationAccess(_ completion: @escaping (Bool) -> Void) {\n    guard CLLocationManager.authorizationStatus() != .authorizedWhenInUse else {\n        completion(true)\n        return\n    }\n    \n    CLLocationManager.requestWhenInUseAuthorization()\n    completion(false",
      "",
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω—ã–π –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –ø–∏–Ω–æ–≤.\n/// - Parameter attempts: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –ø–∏–Ω–æ–≤.\n/// - Returns: `true`, –µ—Å–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –ø–∏–Ω–æ–≤ –±—ã–ª–æ –ø—Ä–µ–≤—ã—à–µ–Ω–æ.\nfunc isPinAttemptsLimitExceeded(_ attempts: Int) -> Bool {\n    return attempts >= 3\n}\n",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞ –ø–æ—Å—Ç–∞–≤–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.\n/// - Parameter status: –°—Ç–∞—Ç—É—Å –ø–æ—Å—Ç–∞–≤–∫–∏.\n/// - Returns: –¢–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞ –ø–æ—Å—Ç–∞–≤–∫–∏.\nfunc deliveryStatusText(for status: String) -> String {\n    switch status {\n    case \"pending\": return \"–û–∂–∏–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏\"\n    case \"shipped\": return \"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ\"\n    case \"delivered\": return \"–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ\"\n    default: return \"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ\"\n    }\n}\n\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞ –ø–æ—Å—Ç–∞–≤–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.\n/// - Parameter status: –°—Ç–∞—Ç—É—Å –ø–æ—Å—Ç–∞–≤–∫–∏.\n/// - Returns: –¢–µ–∫—Å—Ç —Å—Ç–∞—Ç—É",
      "",
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –ø–æ—è–≤–∏–ª—Å—è.\n/// - Parameter completion: –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞.\nfunc pingServer(completion: @escaping (Bool) -> Void) {\n    let url = URL(string: \"https://api.example.com/ping\")!\n    URLSession.shared.dataTask(with: url) { _, response, error in\n        let httpResponse = response as? HTTPURLResponse\n        completion(httpResponse?.statusCode == 200 && error == nil)\n    }.resume()\n}\n\n\n/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –ø–æ—è–≤–∏–ª—Å—è.\n/// - Parameter completion: –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞.\nfunc pingServer(completion: @escaping",
      "/// –ó–∞–ø–∏—Å—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ.\n/// - Parameter languageCode: –ö–æ–¥ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏.\nfunc savePreferredLanguage(_ languageCode: String) {\n    UserDefaults.standard.set(languageCode, forKey: \"preferredLanguage\")\n}\n\n\n/// –ó–∞–ø–∏—Å—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ.\n/// - Parameter languageCode: –ö–æ–¥ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏.\nfunc savePreferredLanguage(_ languageCode: String) {\n    UserDefaults.standard.set(languageCode, forKey: \"preferredLanguage\")\n}\n",
      "",
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç `true`, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —è–≤–ª—è–µ—Ç—Å—è —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º, –∏–Ω–∞—á–µ `false`.\nfunc isNonIntegerNumber(_ text: String) -> Bool {\n    if let number = Double(text) {\n        return floor(number) != number\n    }\n    return false\n}\n\n\n/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —á–∏—Å–ª–æ–º.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç `true`, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º, –∏–Ω–∞",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏–∑ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Å–∏–º–≤–æ–ª–æ–≤\n/// - Parameters:\n///   - character: –ß–∏—Å–ª–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π —Å–∏–º–≤–æ–ª–∞\n///   - count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Å –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–º–∏—Å—è —Å–∏–º–≤–æ–ª–∞–º–∏\nfunc repeatCharacter(_ character: Character, count: Int) -> String {\n    return String(repeating: String(character), count: count)\n}\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏–∑ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Å–∏–º–≤–æ–ª–æ–≤\n/// - Parameters:\n///   - character: –ß–∏—Å–ª–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π —Å–∏–º–≤–æ–ª–∞\n///   - count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n/// -",
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –≤ –º–∞—Å—Å–∏–≤–µ —Å—Ç—Ä–æ–∫.\n/// - Parameters:\n///   - text: –°—Ç—Ä–æ–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.\n///   - array: –ú–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç `true` –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–∞ –≤ –º–∞—Å—Å–∏–≤–µ —Å—Ç—Ä–æ–∫.\nfunc isUniqueString(_ text: String, in array: [String]) -> Bool {\n    return array.filter { $0 == text }.count == 1\n}\n\n/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –≤ –º–∞—Å—Å–∏–≤–µ —Å—Ç—Ä–æ–∫.\n//",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –æ–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–º —á–∏—Å–ª–æ–º\n/// - Parameters:\n///   - text: –í—Ö–æ–¥—è—â–µ–µ —á–∏—Å–ª–æ\n///   - decimals: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π\n/// - Returns: –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ\nfunc roundedNumber(from text: String, decimals: Int) -> String? {\n    guard let number = Double(text) else { return nil }\n    return round(number * pow(10, Double(decimals))) / pow(10, Double(decimals))\n}\n\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º\n/// - Parameter text: –í—Ö–æ–¥—è—â–µ–µ —á–∏—Å–ª–æ\n/// - Returns: –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ü–∏—Ñ—Ä –∏–∑ —Å—Ç—Ä–æ–∫–∏.\n/// - Parameter text: –°—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Ü–∏—Ñ—Ä—ã.\n/// - Returns: –¶–∏—Ñ—Ä—ã –≤ —Å—Ç—Ä–æ–∫–µ.\nfunc extractDigitsInOrder(from text: String) -> [String] {\n    return text.filter { $0.isNumber }\n}\n\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ü–∏—Ñ—Ä –∏–∑ —Å—Ç—Ä–æ–∫–∏.\n/// - Parameter text: –°—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Ü–∏—Ñ—Ä—ã.\n/// - Returns: –¶–∏—Ñ—Ä—ã –≤ —Å—Ç—Ä–æ–∫–µ.\nfunc extractDigitsInOrder(from text: String) -> [String] {\n    return text.filter { $0.isNumber }\n}\n\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ü–∏—Ñ—Ä –∏–∑ —Å—Ç—Ä",
      "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –∫–æ–¥ —è–∑—ã–∫–∞ Cobol\n/// - Parameter text: –°—Ç—Ä–æ–∫–∞ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è\n/// - Returns: –ö–æ–¥ Cobol\nfunc toCobolCase(_ text: String) -> String {\n    let words = text.split(separator: \" \").map { $0.lowercased() }\n    guard let first = words.first else { return \"\" }\n    return [first] + words.dropFirst().map { $0.capitalized }.joined(separator: \" \")\n}\n",
      "/// –£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –∏–∑ —Å—Ç—Ä–æ–∫–∏, –∫—Ä–æ–º–µ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤ –∏–∑ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞.\n/// - Parameter text: –í—Ö–æ–¥—è—â–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Parameter charactersToRemove: –°–ø–∏—Å–æ–∫ —Å–∏–º–≤–æ–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∏–∑ —Å—Ç—Ä–æ–∫–∏.\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Ç–æ–ª—å–∫–æ —Å–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –≤—Ö–æ–¥—è—Ç –≤ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤.\nfunc removeCharactersFromString(_ text: String, charactersToRemove: String) -> String {\n    return text.filter { !charactersToRemove.contains($0) }\n}\n",
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.\n/// - Parameter text: –¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.\n/// - Returns: `true`, –µ—Å–ª–∏ —á–∏—Å–ª–æ.\nfunc isWholeNumber(_ text: String) -> Bool {\n    return Int(text) != nil\n}\n\n\n/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç —á–∏—Å–ª–æ–º.\n/// - Parameter text: –¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.\n/// - Returns: `true`, –µ—Å–ª–∏ —á–∏—Å–ª–æ.\nfunc isNumber(_ text: String) -> Bool {\n    return Int(text) != nil\n}\n\n\n/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç —Å—Ç—Ä–æ–∫–æ–π.\n/// - Parameter text: –¢–µ–∫—Å—Ç –¥–ª",
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Ç–µ–∫—Å—Ç –ø–æ–¥—Å—Ç—Ä–æ–∫—É.\n/// - Parameters:\n///   - substring: –ü–æ–¥—Å—Ç—Ä–æ–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.\n///   - text: –¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç `true`, –µ—Å–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –ø–æ–¥—Å—Ç—Ä–æ–∫–∞ –≤ —Ç–µ–∫—Å—Ç–µ.\nfunc containsSubstring(_ substring: String, in text: String) -> Bool {\n    return text.contains(substring)\n}\n\n/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Ç–µ–∫—Å—Ç –ø–æ–¥—Å—Ç—Ä–æ–∫—É.\n/// - Parameters:\n///   - substring: –ü–æ–¥—Å—Ç—Ä–æ–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.\n///   - text: –¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.\n/// - Returns: –í–æ–∑–≤",
      "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤ —Å –∑–∞–≥–ª–∞–≤–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏ –ø–æ —Å–ª–æ–≤–∞–º.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –ú–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫, –∑–∞–≥–ª–∞–≤–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏.\nfunc stringToCapitalizedWords(_ text: String) -> [String] {\n    return text.split(separator: \" \").map { $0.capitalized }\n}\n\n\n/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤ —Å –∑–∞–≥–ª–∞–≤–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏ –ø–æ —Å–ª–æ–≤–∞–º.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –ú–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫, –∑–∞–≥–ª–∞–≤–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏.\nfunc stringToCapitalizedWords(_",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏\n/// - Parameter count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏\nfunc randomString(_ count: Int) -> String {\n    return String(Array(repeating: .randomElement(), count: count))\n}\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏\n/// - Parameter count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏\nfunc randomString(_ count: Int) -> String {\n    return String(Array(repeating: .randomElement(), count: count",
      "/// –ü–æ–∏—Å–∫ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ\n/// - Parameters:\n///   - substring: –ü–æ–¥—Å—Ç—Ä–æ–∫–∞\n///   - text: –°—Ç—Ä–æ–∫–∞\n/// - Returns: –ò–Ω–¥–µ–∫—Å –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ\nfunc indexOfSubstring(_ substring: String, in text: String) -> Int? {\n    return text.range(of: substring)?.lowerBound.utf16Offset(in: text)\n}\n\n\n/// –ü–æ–∏—Å–∫ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ\n/// - Parameters:\n///   - substring: –ü–æ–¥—Å—Ç—Ä–æ–∫–∞\n///   - text: –°—Ç—Ä–æ–∫–∞\n/// - Returns: –ò–Ω–¥–µ–∫—Å –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ\nfunc indexOfSubstring(_ substring: String, in text: String) -> Int? {\n    return text.range(of: substring)?.lowerBound.utf16Offset",
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: `true`, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º.\nfunc isAlphaOnlyPalindrome(_ text: String) -> Bool {\n    let cleaned = text.lowercased().filter { $0.isLetter }\n    return cleaned == String(cleaned.reversed())\n}\n\n\n/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: `true`, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º.\nfunc isAlphaOnlyPalindrome(_ text: String) -> Bool {\n    let cleaned =",
      "/// –í—ã–¥–µ–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –≤ –≤–µ—Ä—Ö–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ\n/// - Parameter text: –í—Ö–æ–¥—è—â–∏–π —Ç–µ–∫—Å—Ç\n/// - Returns: –í—ã–¥–µ–ª–µ–Ω–Ω—ã–µ –±—É–∫–≤—ã\nfunc extractUppercaseLetters(from text: String) -> String {\n    return text.filter { $0.isUppercase }\n}\n",
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —á–∏—Å–ª–æ–º –≤ –¥–≤–æ–∏—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ —Å—á–∏—Å–ª–µ–Ω–∏—è.\n/// - Parameter text: –°—Ç—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä—É—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å.\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç `true`, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º –≤ –¥–≤–æ–∏—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ —Å—á–∏—Å–ª–µ–Ω–∏—è.\nfunc isBinaryNumber(_ text: String) -> Bool {\n    return text.allSatisfy { $0 == \"0\" || $0 == \"1\" }\n}\n",
      "/// –ò–∑–º–µ–Ω—è–µ—Ç –ø–µ—Ä–≤—É—é –±—É–∫–≤—É —Å—Ç—Ä–æ–∫–∏ –Ω–∞ –∑–∞–≥–ª–∞–≤–Ω—É—é.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –ø–µ—Ä–≤–æ–π –±—É–∫–≤–æ–π.\nfunc capitalizeFirstLetter(_ text: String) -> String {\n    guard let first = text.first else { return text }\n    return first.uppercased() + text.dropFirst()\n}\n\n/// –ò–∑–º–µ–Ω—è–µ—Ç –ø–µ—Ä–≤—É—é –±—É–∫–≤—É —Å—Ç—Ä–æ–∫–∏ –Ω–∞ –∑–∞–≥–ª–∞–≤–Ω—É—é.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –ø–µ—Ä–≤–æ–π –±—É–∫–≤–æ–π.\nfunc capitalizeFirstLetter(_ text: String) -> String {\n    guard",
      "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤ —Å–∏–º–≤–æ–ª–æ–≤.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –ú–∞—Å—Å–∏–≤ —Å–∏–º–≤–æ–ª–æ–≤.\nfunc stringToCharArray(_ text: String) -> [Character] {\n    return Array(text)\n}\n\n\n/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –º–∞—Å—Å–∏–≤ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫—É.\n/// - Parameter text: –ú–∞—Å—Å–∏–≤ —Å–∏–º–≤–æ–ª–æ–≤.\n/// - Returns: –°—Ç—Ä–æ–∫–∞.\nfunc charArrayToString(_ text: [Character]) -> String {\n    return String(text)\n}\n\n\n/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –º–∞—Å—Å–∏–≤ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫—É.\n/// - Parameter text: –ú–∞—Å—Å–∏–≤ —Å–∏–º–≤–æ–ª–æ–≤.\n/// - Returns: –°—Ç—Ä–æ–∫–∞.\nfunc char",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Ä–∞–∑–º–µ—Ä–∞ `count`, —Å–æ—Å—Ç–æ—è—â—É—é –∏–∑ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π —Å—Ç—Ä–æ–∫–∏ `text`\n/// - Parameter text: –°—Ç—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å\n/// - Parameter count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–º `count`\nfunc repeatString(_ text: String, count: Int) -> String {\n    return String(repeating: text, count: count)\n}\n\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Ä–∞–∑–º–µ—Ä–∞ `count`, —Å–æ—Å—Ç–æ—è—â—É—é –∏–∑ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π —Å—Ç—Ä–æ–∫–∏ `text`\n/// - Parameter text: –°—Ç—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å\n/// - Parameter count: –ö–æ–ª–∏—á–µ—Å—Ç–≤",
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –≤—Ä–µ–º–µ–Ω–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ —á–∞—Å—ã:–º–∏–Ω—É—Ç—ã.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç `true` –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —à–∞–±–ª–æ–Ω—É.\nfunc isValidTime(_ text: String) -> Bool {\n    let pattern = \"^(2[0-3]|[01]?[0-9]):([0-5]?[0-9])$\"\n    return matchesRegex(text, pattern: pattern)\n}\n\n\n/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –≤—Ä–µ–º–µ–Ω–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ —á–∞—Å—ã:–º–∏–Ω—É—Ç—ã:—Å–µ–∫—É–Ω–¥—ã.\n/// - Parameter text: –í—Ö–æ–¥",
      "/// –í—ã—á–ª–µ–Ω—è–µ—Ç —á–∏—Å–ª–∞ –∏–∑ —Å—Ç—Ä–æ–∫–∏\n/// - Parameter text: –°—Ç—Ä–æ–∫–∞\n/// - Returns: –ß–∏—Å–ª–∞\nfunc extractDigitsAndDashes(from text: String) -> String {\n    return text.filter { $0.isNumber || $0 == \"-\" }\n}\n\n\n/// –í—ã—á–ª–µ–Ω—è–µ—Ç —á–∏—Å–ª–∞ –∏–∑ —Å—Ç—Ä–æ–∫–∏\n/// - Parameter text: –°—Ç—Ä–æ–∫–∞\n/// - Returns: –ß–∏—Å–ª–∞\nfunc extractDigitsAndDashes(from text: String) -> String {\n    return text.filter { $0.isNumber || $0 == \"-\" }\n}\n\n\n/// –í—ã—á–ª–µ–Ω—è–µ—Ç —á–∏—Å–ª–∞ –∏–∑ —Å—Ç—Ä–æ–∫–∏\n/// - Parameter text: –°—Ç—Ä–æ–∫–∞\n/// - Returns: –ß–∏—Å–ª–∞\nfunc extractDigitsAndDashes(from text: String) -> String {\n    return text.filter { $0.isNumber || $0 == \"-\" }\n",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å–æ —Å—Ç—Ä–æ—á–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏ –∏–∑ —Å—Ç—Ä–æ–∫–∏.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Å–æ —Å—Ç—Ä–æ—á–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏ –∏–∑ —Å—Ç—Ä–æ–∫–∏.\nfunc lowercaseLettersWithoutNumbers(from text: String) -> String {\n    return text.filter { $0.isLetter }.lowercased()\n}\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å–æ —Å—Ç—Ä–æ—á–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏ –∏–∑ —Å—Ç—Ä–æ–∫–∏.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Å–æ —Å—Ç—Ä–æ—á–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏ –∏–∑ —Å—Ç—Ä–æ–∫–∏.\nfunc lowercaseLettersWithoutNumbers(from text: String) -> String {",
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫–æ–≤—ã–º–∏ —Å—Ç—Ä–æ–∫–∞–º–∏ —Å –æ–¥–∏–Ω–∞–∫–æ–≤–æ–π –¥–ª–∏–Ω–æ–π.\n/// - Parameter array: –ú–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫.\n/// - Returns: `true`, –µ—Å–ª–∏ –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –∏–º–µ—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—É—é –¥–ª–∏–Ω—É.\nfunc allStringsHaveEqualLength(_ array: [String]) -> Bool {\n    guard let firstLength = array.first?.count else { return true }\n    return array.allSatisfy { $0.count == firstLength }\n}\n\n\n/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫–æ–≤—ã–º–∏ —Å—Ç—Ä–æ–∫–∞–º–∏ —Å –æ–¥–∏–Ω–∞–∫–æ–≤–æ–π –¥–ª–∏–Ω–æ–π.\n/// - Parameter array: –ú–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫.\n/// - Returns:",
      "/// –†–∞–∑–¥–µ–ª—è–µ—Ç —Å—Ç—Ä–æ–∫—É –ø–æ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—é.\n/// - Parameters:\n///   - text: –ò—Å—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n///   - separator: –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å —Å—Ç—Ä–æ–∫–∏.\n/// - Returns: –†–∞–∑–¥–µ–ª–µ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\nfunc splitStringByCharacter(_ text: String, separator: Character) -> [String] {\n    return text.split(separator: separator).map { String($0) }\n}\n\n\n/// –†–∞–∑–¥–µ–ª—è–µ—Ç —Å—Ç—Ä–æ–∫—É –ø–æ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—é.\n/// - Parameters:\n///   - text: –ò—Å—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n///   - separator: –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å —Å—Ç—Ä–æ–∫–∏.\n/// - Returns: –†–∞–∑–¥–µ–ª–µ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\nfunc splitStringByCharacter(_ text: String",
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–º —Å–∏–º–≤–æ–ª–æ–≤ –≤ 16-—Ä–∏—á–Ω–æ–º —á–∏—Å–ª–µ.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: `true`, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ - 16-—Ä–∏—á–Ω–æ–µ —á–∏—Å–ª–æ.\nfunc isHexadecimalNumber(_ text: String) -> Bool {\n    let pattern = \"^[0-9A-Fa-f]+$\"\n    return matchesRegex(text, pattern: pattern)\n}\n\n\n/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–º —Å–∏–º–≤–æ–ª–æ–≤ –≤ 16-—Ä–∏—á–Ω–æ–º —á–∏—Å–ª–µ.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: `true`, –µ—Å–ª–∏ —Å—Ç—Ä–æÔøΩ",
      "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –¥–∞—Ç—É.\n/// - Parameter text: –°—Ç—Ä–æ–∫–∞.\n/// - Returns: –î–∞—Ç–∞.\nfunc stringToDate(_ text: String) -> Date? {\n    let formatter = DateFormatter()\n    formatter.dateFormat = \"yyyy-MM-dd HH:mm:ss\"\n    return formatter.date(from: text)\n}\n\n\n/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –¥–∞—Ç—É.\n/// - Parameter text: –°—Ç—Ä–æ–∫–∞.\n/// - Returns: –î–∞—Ç–∞.\nfunc stringToDate(_ text: String) -> Date? {\n    let formatter = DateFormatter()\n    formatter.dateFormat = \"yyyy-MM-dd\"\n    return formatter.date(from: text)\n}\n\n\n/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –¥–∞—Ç—É.\n/// - Parameter text: –°—Ç—Ä–æ–∫–∞.\n/// - Returns: –î–∞—Ç–∞.\nfunc stringTo",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏–ª–∏ —Å–∏–º–≤–æ–ª–æ–≤.\n/// - Parameter text: –í—Ö–æ–¥—è—â–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏–ª–∏ —Å–∏–º–≤–æ–ª–æ–≤.\nfunc cleanString(_ text: String) -> String {\n    let charactersToRemove = CharacterSet.whitespacesAndNewlines.union(.punctuationCharacters)\n    return text.filter { !charactersToRemove.contains($0.unicodeScalars.first!) }\n}\n\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏–ª–∏ —Å–∏–º–≤–æ–ª–æ–≤.\n/// - Parameter text: –í—Ö–æ–¥—è—â–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏–ª–∏ —Å–∏–º–≤–æ–ª",
      "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ, —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ª—é–±—ã–º –±–∞–∑–æ–π —Å–∏–º–≤–æ–ª–æ–≤\n/// - Parameter text: –°—Ç—Ä–æ–∫–∞ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏\n/// - Parameter base: –ù–∞—á–∞–ª—å–Ω–∞—è –±–∞–∑–∞ —Å–∏–º–≤–æ–ª–æ–≤\n/// - Returns: –ß–∏—Å–ª–æ –≤ –¥–µ—Å—è—Ç–∏—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ —Å—á–∏—Å–ª–µ–Ω–∏—è\nfunc stringToNumberWithBase(_ text: String, base: Int) -> Int? {\n    return Int(text, radix: base)\n}\n\n/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ, —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ª—é–±—ã–º –±–∞–∑–æ–π —Å–∏–º–≤–æ–ª–æ–≤\n/// - Parameter text: –°—Ç—Ä–æ–∫–∞ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏\n/// - Parameter base: –ù–∞—á–∞–ª—å–Ω–∞—è",
      "/// –ü–æ–¥—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤.\nfunc countUniqueCharacters(in text: String) -> Int {\n    return Set(text).count\n}\n\n\n/// –ü–æ–¥—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤.\nfunc countUniqueCharacters(in text: String) -> Int {\n    return Set(text).count\n}\n\n\n/// –ü–æ–¥—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã.\n/// - Parameter text: –í—Ö–æ–¥—è—â–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –°—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã.\nfunc uniqueCharactersOnly(in text: String) -> String {\n    let characterCount = text.reduce(into: [:]) { counts, char in counts[char, default: 0] += 1 }\n    return String(text.filter { characterCount[$0] == 1 })\n}\n\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã.\n/// - Parameter text: –í—Ö–æ–¥—è—â–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –°—Ç—Ä–æÔøΩ",
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç email\n/// - Parameter text: –í–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç\n/// - Returns: true, –µ—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —è–≤–ª—è–µ—Ç—Å—è email\nfunc isValidEmail(_ text: String) -> Bool {\n    let emailRegex = \"^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,}$\"\n    return matchesRegex(text, pattern: emailRegex)\n}\n\n/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç email\n/// - Parameter text: –í–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç\n/// - Returns: true, –µ—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —è–≤–ª—è–µ—Ç—Å—è email\nfunc isValidEmail(_ text",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞.\n/// - Parameter text: –í—Ö–æ–¥—è—â–∏–π —Ç–µ–∫—Å—Ç.\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞.\nfunc extractNumbersFromString(_ text: String) -> String {\n    return text.filter { $0.isNumber }\n}\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞.\n/// - Parameter text: –í—Ö–æ–¥—è—â–∏–π —Ç–µ–∫—Å—Ç.\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞.\nfunc extractNumbersFromString(_ text: String) -> String {\n    return text.filter { $0.isNumber }\n}\n",
      "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –ø—Ä–æ—Ü–µ–Ω—Ç.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Parameter precision: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π.\n/// - Returns: –ü—Ä–æ—Ü–µ–Ω—Ç –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏.\nfunc stringToPercentage(_ text: String, precision: Int) -> String? {\n    guard let number = Double(text) else { return nil }\n    let percentage = number * 100\n    return String(format: \"%.\\(precision)f%%\", percentage)\n}\n\n\n/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —á–∏—Å–ª–æ –≤ —Å—Ç—Ä–æ–∫—É —Å –∑–∞–ø—è—Ç–æ–π –∏ –ø—Ä–æ–±–µ–ª–∞–º–∏.\n/// - Parameter number: –ß–∏—Å–ª–æ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è.\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É",
      "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ —Å—Ç—Ä–æ–∫—É —Å —Å–æ—Å—Ç–∞–≤–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–æ–º.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Å–æ—Å—Ç–∞–≤–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–æ–º.\nfunc alternatingUpperAndLowerCase(_ text: String) -> String {\n    return String(text.enumerated().map { (index, char) in\n        index % 2 == 0 ? char.lowercased() : char.uppercased()\n    })\n}\n\n/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ —Å—Ç—Ä–æ–∫—É —Å —Å–æ—Å—Ç–∞–≤–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–æ–º.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Å–æ—Å—Ç–∞–≤–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–æ–º.\nfunc alternatingUpperAndLowerCase(_ text: String) -> String {\n    return String(text.",
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç —á–∏—Å–ª–æ–º.\n/// - Parameter text: –í—Ö–æ–¥—è—â–∏–π —Ç–µ–∫—Å—Ç.\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç `true`, –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º, –∏–Ω–∞—á–µ `false`.\nfunc isNumeric(_ text: String) -> Bool {\n    return Double(text) != nil\n}\n\n\n/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç —á–∏—Å–ª–æ–º.\n/// - Parameter text: –í—Ö–æ–¥—è—â–∏–π —Ç–µ–∫—Å—Ç.\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç `true`, –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º, –∏–Ω–∞—á–µ `false`.\nfunc isNumeric(_ text: String) -> Bool {\n    return Double(text) != nil\n}\n\n\n//",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤, –≤ –∫–æ—Ç–æ—Ä–æ–º —ç–ª–µ–º–µ–Ω—Ç—ã –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã.\n/// - Parameter array: –ú–∞—Å—Å–∏–≤ –¥–ª—è –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–æ–≥–æ.\n/// - Returns: –ú–∞—Å—Å–∏–≤, –≤ –∫–æ—Ç–æ—Ä–æ–º —ç–ª–µ–º–µ–Ω—Ç—ã –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã.\nfunc reverseArray<T>(_ array: [T]) -> [T] {\n    return array.reversed()\n}\n\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤, –≤ –∫–æ—Ç–æ—Ä–æ–º —ç–ª–µ–º–µ–Ω—Ç—ã –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã.\n/// - Parameter array: –ú–∞—Å—Å–∏–≤ –¥–ª—è –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–æ–≥–æ.\n/// - Returns: –ú–∞—Å—Å–∏–≤, –≤ –∫–æ—Ç–æ—Ä–æ–º —ç–ª–µ–º–µ–Ω—Ç—ã –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã.\nfunc reverseArray<T>(_ array: [T]) ->",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Å–ª–æ–≤–∞—Ä—è\n/// - Parameter dictionary: –°–ª–æ–≤–∞—Ä—å –¥–ª—è –≤—ã–±–æ—Ä–∫–∏\n/// - Returns: –°–ª—É—á–∞–π–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Å–ª–æ–≤–∞—Ä—è\nfunc randomElementFromDictionary<Key, Value>(_ dictionary: [Key: Value]) -> (Key, Value)? where Key: Hashable {\n    return dictionary.randomElement()\n}\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Å–ª–æ–≤–∞—Ä—è\n/// - Parameter dictionary: –°–ª–æ–≤–∞—Ä—å –¥–ª—è –≤—ã–±–æ—Ä–∫–∏\n/// - Returns: –°–ª—É—á–∞–π–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Å–ª–æ–≤–∞—Ä—è\nfunc randomElementFromDictionary<Key, Value>(_ dictionary: [Key: Value]) -> (Key, Value)? where Key: Hashable {\n    return dictionary.randomElement()\n}\n\n/// –í–æ–∑–≤—Ä–∞—â",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∫–ª—é—á–µ–π, –≤—Ö–æ–¥—è—â–∏—Ö –≤ –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –≤ –∫–∞–∂–¥–æ–º –∫–ª—é—á–µ.\n/// - Parameter dictionary: –ú–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö.\n/// - Returns: –ú–∞—Å—Å–∏–≤ –∫–ª—é—á–µ–π —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –≤ –∫–∞–∂–¥–æ–º –∫–ª—é—á–µ.\nfunc keysWithMinValues<Key, Value>(_ dictionary: [Key: Value]) -> [Key] where Key: Hashable, Value: Comparable {\n    guard let minValue = dictionary.values.min() else { return [] }\n    return dictionary.filter { $0.value == minValue }.map { $0.key }\n}\n\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∫–ª—é—á–µ–π, –≤—Ö–æ–¥—è—â–∏—Ö –≤ –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö",
      "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–∞—Ç–∞ —Å–ª–µ–¥—É—é—â–µ–π –∑–∞ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π\n/// - Parameter date: –î–∞—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏\n/// - Returns: true, –µ—Å–ª–∏ –¥–∞—Ç–∞ —Å–ª–µ–¥—É—é—â–µ–π –∑–∞ —Ç–µ–∫—É—â–µ–π\nfunc isFutureDate(_ date: Date) -> Bool {\n    return date > Date()\n}\n\n\n/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–∞—Ç–∞ —Å–ª–µ–¥—É—é—â–µ–π –∑–∞ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π\n/// - Parameter date: –î–∞—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏\n/// - Returns: true, –µ—Å–ª–∏ –¥–∞—Ç–∞ —Å–ª–µ–¥—É—é—â–µ–π –∑–∞ —Ç–µ–∫—É—â–µ–π\nfunc isFutureDate(_ date: Date) -> Bool {\n    return date > Date()\n}\n\n\n/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, ",
      "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤ —Å–∏–º–≤–æ–ª–æ–≤, –≤–∫–ª—é—á–∞—è –≤—Å–µ –±—É–∫–≤—ã –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ –∏ –≤—Å–µ —Ü–∏—Ñ—Ä—ã.\n/// - Parameter str: –°—Ç—Ä–æ–∫–∞.\n/// - Returns: –ú–∞—Å—Å–∏–≤ —Å–∏–º–≤–æ–ª–æ–≤, –≤–∫–ª—é—á–∞—è –≤—Å–µ –±—É–∫–≤—ã –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ –∏ –≤—Å–µ —Ü–∏—Ñ—Ä—ã.\nfunc stringToAlphabeticCharArray(_ str: String) -> [Character] {\n    return str.filter { $0.isLetter }\n}\n\n\n/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤ —Å–∏–º–≤–æ–ª–æ–≤, –≤–∫–ª—é—á–∞—è –≤—Å–µ –±—É–∫–≤—ã –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ –∏ –≤—Å–µ —Ü–∏—Ñ—Ä—ã.\n/// - Parameter str: –°—Ç—Ä",
      "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –¥–≤—É–º—è –¥–∞—Ç–∞–º–∏ –≤ –¥–Ω—è—Ö.\n/// - Parameters:\n///   - startDate: –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞.\n///   - endDate: –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è.\n/// - Returns: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –¥–≤—É–º—è –¥–∞—Ç–∞–º–∏ –≤ –¥–Ω—è—Ö.\nfunc daysBetweenDates(startDate: Date, endDate: Date) -> Int {\n    return Calendar.current.dateComponents([.day], from: startDate, to: endDate).day ?? 0\n}\n\n/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –¥–≤—É–º—è –¥–∞—Ç–∞–º–∏ –≤ –¥–Ω—è—Ö.\n/// - Parameters:\n///   - startDate: –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞.\n///   - endDate: –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è",
      ""
    ],
    "REFERENCES": [
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–æ–∫–µ–Ω–∞ –≤ UserDefaults.\n/// - Returns: true, –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –Ω–µ –∏—Å—Ç—ë–∫.\nfunc isUserLoggedIn() -> Bool {\n    guard let token = UserDefaults.standard.string(forKey: \"authToken\") else { return false }\n    // –ó–¥–µ—Å—å –º–æ–≥–ª–∞ –±—ã –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞\n    return !token.isEmpty\n}"
      ],
      [
        "/// –§–æ—Ä–º–∏—Ä—É–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫.\n/// - Parameter name: –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n/// - Returns: –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ.\nfunc generateGreetingMessage(for name: String) -> String {\n    let hour = Calendar.current.component(.hour, from: Date())\n    switch hour {\n    case 6..<12: return \"–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, \\(name)\"\n    case 12..<18: return \"–î–æ–±—Ä—ã–π –¥–µ–Ω—å, \\(name)\"\n    case 18..<23: return \"–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä, \\(name)\"\n    default: return \"–î–æ–±—Ä–æ–π –Ω–æ—á–∏, \\(name)\"\n    }\n}"
      ],
      [
        "/// –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö –≤ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É —Å –≤–∞–ª—é—Ç–æ–π.\n/// - Parameter amount: –°—É–º–º–∞ –≤ —Ä—É–±–ª—è—Ö.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Å —Å–∏–º–≤–æ–ª–æ–º —Ä—É–±–ª—è.\nfunc formatCurrency(_ amount: Double) -> String {\n    let formatter = NumberFormatter()\n    formatter.numberStyle = .currency\n    formatter.currencySymbol = \"‚ÇΩ\"\n    formatter.locale = Locale(identifier: \"ru_RU\")\n    return formatter.string(from: NSNumber(value: amount)) ?? \"\\(amount) ‚ÇΩ\"\n}"
      ],
      [
        "/// –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∑–∞–¥–∞–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º.\n/// - Parameter message: –¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.\nfunc sendLocalPush(message: String) {\n    let content = UNMutableNotificationContent()\n    content.body = message\n    let trigger = UNTimeIntervalNotificationTrigger(timeInterval: 1, repeats: false)\n    let request = UNNotificationRequest(identifier: UUID().uuidString, content: content, trigger: trigger)\n    UNUserNotificationCenter.current().add(request)\n}"
      ],
      [
        "/// –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑–∞—Ç—å onboarding –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ñ–ª–∞–≥–∞ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ.\n/// - Returns: true, –µ—Å–ª–∏ onboarding –µ—â—ë –Ω–µ –ø—Ä–æ–π–¥–µ–Ω.\nfunc shouldShowOnboarding() -> Bool {\n    return !UserDefaults.standard.bool(forKey: \"onboardingShown\")\n}"
      ],
      [
        "/// –°–æ—Ö—Ä–∞–Ω—è–µ—Ç ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞.\n/// - Parameter productId: ID —Ç–æ–≤–∞—Ä–∞.\nfunc saveLastViewedProduct(_ productId: String) {\n    UserDefaults.standard.set(productId, forKey: \"lastViewedProduct\")\n}"
      ],
      [
        "/// –û—Ü–µ–Ω–∏–≤–∞–µ—Ç, —Å–ª–µ–¥—É–µ—Ç –ª–∏ –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ.\n/// - Returns: true, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–∏–¥–µ–ª –±–∞–Ω–Ω–µ—Ä –±–æ–ª–µ–µ —Å—É—Ç–æ–∫.\nfunc shouldShowPromoBanner() -> Bool {\n    let lastShown = UserDefaults.standard.object(forKey: \"lastPromoShown\") as? Date ?? .distantPast\n    return Date().timeIntervalSince(lastShown) > 86400\n}"
      ],
      [
        "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ —Å—Ç—Ä–æ–∫—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ UI.\n/// - Parameters:\n///   - lat: –®–∏—Ä–æ—Ç–∞.\n///   - lon: –î–æ–ª–≥–æ—Ç–∞.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç.\nfunc coordinatesToString(lat: Double, lon: Double) -> String {\n    return String(format: \"üìç %.4f, %.4f\", lat, lon)\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –ª–∏ –≤—Å–µ –ø–æ–ª—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n/// - Parameter profile: –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ—Ñ–∏–ª—è.\n/// - Returns: true, –µ—Å–ª–∏ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –Ω–µ –ø—É—Å—Ç—ã–µ.\nfunc isUserProfileComplete(profile: [String: String]) -> Bool {\n    let requiredKeys = [\"firstName\", \"lastName\", \"email\"]\n    return requiredKeys.allSatisfy { !(profile[$0]?.isEmpty ?? true) }\n}"
      ],
      [
        "/// –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É.\n/// - Parameter phone: –°—Ç—Ä–æ–∫–∞ –Ω–æ–º–µ—Ä–∞.\n/// - Returns: true, –µ—Å–ª–∏ –Ω–æ–º–µ—Ä –≤–∞–ª–∏–¥–µ–Ω.\nfunc isValidRussianPhoneNumber(_ phone: String) -> Bool {\n    let pattern = \"^\\\\+7\\\\d{10}$\"\n    return phone.range(of: pattern, options: .regularExpression) != nil\n}"
      ],
      [
        "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥ (–æ—Ç 0 –¥–æ 5) –≤ —Å—Ç—Ä–æ–∫—É —Å —ç–º–æ–¥–∑–∏-–∑–≤–µ–∑–¥–∞–º–∏.\n/// - Parameter rating: –ó–Ω–∞—á–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ –∏–∑ –∑–≤—ë–∑–¥.\nfunc starsForRating(_ rating: Double) -> String {\n    let filledStars = Int(rating)\n    let emptyStars = 5 - filledStars\n    return String(repeating: \"‚òÖ\", count: filledStars) + String(repeating: \"‚òÜ\", count: emptyStars)\n}"
      ],
      [
        "/// –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω–∞—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–µ—Å—Å–∏—è.\n/// - Returns: true, –µ—Å–ª–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω.\nfunc isInternetAvailable() -> Bool {\n    // –£–ø—Ä–æ—â—ë–Ω–Ω–æ, –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ ‚Äî —Ä–µ–∞–ª—å–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ç—Ä–µ–±—É–µ—Ç Reachability\n    return true\n}"
      ],
      [
        "/// –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –¥–∞—Ç—É –¥–æ—Å—Ç–∞–≤–∫–∏ —Å —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å.\n/// - Parameter deliveryDate: –î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏.\n/// - Returns: –°—Ç–∞—Ç—É—Å —Å—Ç—Ä–æ–∫–∏: \"–°–µ–≥–æ–¥–Ω—è\", \"–ó–∞–≤—Ç—Ä–∞\", \"–ü–æ–∑–∂–µ\".\nfunc deliveryStatus(for deliveryDate: Date) -> String {\n    let calendar = Calendar.current\n    if calendar.isDateInToday(deliveryDate) {\n        return \"–°–µ–≥–æ–¥–Ω—è\"\n    } else if calendar.isDateInTomorrow(deliveryDate) {\n        return \"–ó–∞–≤—Ç—Ä–∞\"\n    } else {\n        return \"–ü–æ–∑–∂–µ\"\n    }\n}"
      ],
      [
        "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç–µ–≥–æ–≤ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É —Å —Ö–µ—à—Ç–µ–≥–∞–º–∏.\n/// - Parameter tags: –°–ø–∏—Å–æ–∫ —Ç–µ–≥–æ–≤.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Å —Ö–µ—à—Ç–µ–≥–∞–º–∏.\nfunc hashtags(from tags: [String]) -> String {\n    return tags.map { \"#\\($0.lowercased())\" }.joined(separator: \" \")\n}"
      ],
      [
        "/// –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é —Å–∫—Ä–æ–ª–ª–∞ –≤ —Å–ø–∏—Å–∫–µ —Ç–æ–≤–∞—Ä–æ–≤.\n/// - Parameter offset: –ó–Ω–∞—á–µ–Ω–∏–µ —Å–º–µ—â–µ–Ω–∏—è.\nfunc saveScrollOffset(_ offset: Double) {\n    UserDefaults.standard.set(offset, forKey: \"productListScrollOffset\")\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∑–æ–Ω–µ –¥–æ—Å—Ç–∞–≤–∫–∏ (–ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º).\n/// - Parameters:\n///   - lat: –®–∏—Ä–æ—Ç–∞.\n///   - lon: –î–æ–ª–≥–æ—Ç–∞.\n/// - Returns: true, –µ—Å–ª–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤—Ö–æ–¥—è—Ç –≤ —Ä–∞–¥–∏—É—Å.\nfunc isWithinDeliveryZone(lat: Double, lon: Double) -> Bool {\n    let center = (lat: 55.75, lon: 37.61) // –ú–æ—Å–∫–≤–∞\n    let radiusKm = 30.0\n    let distance = sqrt(pow(center.lat - lat, 2) + pow(center.lon - lon, 2)) * 111\n    return distance < radiusKm\n}"
      ],
      [
        "/// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç URL –¥–ª—è deeplink —Å –∑–∞–¥–∞–Ω–Ω—ã–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º —Ç–æ–≤–∞—Ä–∞.\n/// - Parameter productId: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä.\n/// - Returns: URL –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞.\nfunc generateProductDeeplink(productId: String) -> URL? {\n    return URL(string: \"myapp://product/\\(productId)\")\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏.\n/// - Parameter lastViewedId: –ü–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–π ID.\n/// - Parameter newMessageId: ID –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.\n/// - Returns: true, –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\nfunc hasNewSupportMessage(lastViewedId: String, newMessageId: String) -> Bool {\n    return lastViewedId != newMessageId\n}"
      ],
      [
        "/// –í—ã—á–∏—Å–ª—è–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Ü–µ–ª–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π).\n/// - Parameters:\n///   - current: –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.\n///   - target: –¶–µ–ª–µ–≤–∞—è —Å—É–º–º–∞.\n/// - Returns: –ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ç 0 –¥–æ 100.\nfunc progressPercentage(current: Double, target: Double) -> Int {\n    guard target > 0 else { return 0 }\n    return min(Int((current / target) * 100), 100)\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–æ–∫–µ–Ω–∞ –≤ UserDefaults.\n/// - Returns: true, –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –Ω–µ –∏—Å—Ç—ë–∫.\nfunc isUserLoggedIn() -> Bool {\n    guard let token = UserDefaults.standard.string(forKey: \"authToken\") else { return false }\n    // –ó–¥–µ—Å—å –º–æ–≥–ª–∞ –±—ã –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞\n    return !token.isEmpty\n}"
      ],
      [
        "/// –§–æ—Ä–º–∏—Ä—É–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫.\n/// - Parameter name: –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n/// - Returns: –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ.\nfunc generateGreetingMessage(for name: String) -> String {\n    let hour = Calendar.current.component(.hour, from: Date())\n    switch hour {\n    case 6..<12: return \"–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, \\(name)\"\n    case 12..<18: return \"–î–æ–±—Ä—ã–π –¥–µ–Ω—å, \\(name)\"\n    case 18..<23: return \"–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä, \\(name)\"\n    default: return \"–î–æ–±—Ä–æ–π –Ω–æ—á–∏, \\(name)\"\n    }\n}"
      ],
      [
        "/// –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö –≤ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É —Å –≤–∞–ª—é—Ç–æ–π.\n/// - Parameter amount: –°—É–º–º–∞ –≤ —Ä—É–±–ª—è—Ö.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Å —Å–∏–º–≤–æ–ª–æ–º —Ä—É–±–ª—è.\nfunc formatCurrency(_ amount: Double) -> String {\n    let formatter = NumberFormatter()\n    formatter.numberStyle = .currency\n    formatter.currencySymbol = \"‚ÇΩ\"\n    formatter.locale = Locale(identifier: \"ru_RU\")\n    return formatter.string(from: NSNumber(value: amount)) ?? \"\\(amount) ‚ÇΩ\"\n}"
      ],
      [
        "/// –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∑–∞–¥–∞–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º.\n/// - Parameter message: –¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.\nfunc sendLocalPush(message: String) {\n    let content = UNMutableNotificationContent()\n    content.body = message\n    let trigger = UNTimeIntervalNotificationTrigger(timeInterval: 1, repeats: false)\n    let request = UNNotificationRequest(identifier: UUID().uuidString, content: content, trigger: trigger)\n    UNUserNotificationCenter.current().add(request)\n}"
      ],
      [
        "/// –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑–∞—Ç—å onboarding –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ñ–ª–∞–≥–∞ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ.\n/// - Returns: true, –µ—Å–ª–∏ onboarding –µ—â—ë –Ω–µ –ø—Ä–æ–π–¥–µ–Ω.\nfunc shouldShowOnboarding() -> Bool {\n    return !UserDefaults.standard.bool(forKey: \"onboardingShown\")\n}"
      ],
      [
        "/// –°–æ—Ö—Ä–∞–Ω—è–µ—Ç ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞.\n/// - Parameter productId: ID —Ç–æ–≤–∞—Ä–∞.\nfunc saveLastViewedProduct(_ productId: String) {\n    UserDefaults.standard.set(productId, forKey: \"lastViewedProduct\")\n}"
      ],
      [
        "/// –û—Ü–µ–Ω–∏–≤–∞–µ—Ç, —Å–ª–µ–¥—É–µ—Ç –ª–∏ –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ.\n/// - Returns: true, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–∏–¥–µ–ª –±–∞–Ω–Ω–µ—Ä –±–æ–ª–µ–µ —Å—É—Ç–æ–∫.\nfunc shouldShowPromoBanner() -> Bool {\n    let lastShown = UserDefaults.standard.object(forKey: \"lastPromoShown\") as? Date ?? .distantPast\n    return Date().timeIntervalSince(lastShown) > 86400\n}"
      ],
      [
        "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ —Å—Ç—Ä–æ–∫—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ UI.\n/// - Parameters:\n///   - lat: –®–∏—Ä–æ—Ç–∞.\n///   - lon: –î–æ–ª–≥–æ—Ç–∞.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç.\nfunc coordinatesToString(lat: Double, lon: Double) -> String {\n    return String(format: \"üìç %.4f, %.4f\", lat, lon)\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –ª–∏ –≤—Å–µ –ø–æ–ª—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n/// - Parameter profile: –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ—Ñ–∏–ª—è.\n/// - Returns: true, –µ—Å–ª–∏ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –Ω–µ –ø—É—Å—Ç—ã–µ.\nfunc isUserProfileComplete(profile: [String: String]) -> Bool {\n    let requiredKeys = [\"firstName\", \"lastName\", \"email\"]\n    return requiredKeys.allSatisfy { !(profile[$0]?.isEmpty ?? true) }\n}"
      ],
      [
        "/// –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É.\n/// - Parameter phone: –°—Ç—Ä–æ–∫–∞ –Ω–æ–º–µ—Ä–∞.\n/// - Returns: true, –µ—Å–ª–∏ –Ω–æ–º–µ—Ä –≤–∞–ª–∏–¥–µ–Ω.\nfunc isValidRussianPhoneNumber(_ phone: String) -> Bool {\n    let pattern = \"^\\\\+7\\\\d{10}$\"\n    return phone.range(of: pattern, options: .regularExpression) != nil\n}"
      ],
      [
        "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥ (–æ—Ç 0 –¥–æ 5) –≤ —Å—Ç—Ä–æ–∫—É —Å —ç–º–æ–¥–∑–∏-–∑–≤–µ–∑–¥–∞–º–∏.\n/// - Parameter rating: –ó–Ω–∞—á–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ –∏–∑ –∑–≤—ë–∑–¥.\nfunc starsForRating(_ rating: Double) -> String {\n    let filledStars = Int(rating)\n    let emptyStars = 5 - filledStars\n    return String(repeating: \"‚òÖ\", count: filledStars) + String(repeating: \"‚òÜ\", count: emptyStars)\n}"
      ],
      [
        "/// –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω–∞—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–µ—Å—Å–∏—è.\n/// - Returns: true, –µ—Å–ª–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω.\nfunc isInternetAvailable() -> Bool {\n    // –£–ø—Ä–æ—â—ë–Ω–Ω–æ, –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ ‚Äî —Ä–µ–∞–ª—å–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ç—Ä–µ–±—É–µ—Ç Reachability\n    return true\n}"
      ],
      [
        "/// –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –¥–∞—Ç—É –¥–æ—Å—Ç–∞–≤–∫–∏ —Å —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å.\n/// - Parameter deliveryDate: –î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏.\n/// - Returns: –°—Ç–∞—Ç—É—Å —Å—Ç—Ä–æ–∫–∏: \"–°–µ–≥–æ–¥–Ω—è\", \"–ó–∞–≤—Ç—Ä–∞\", \"–ü–æ–∑–∂–µ\".\nfunc deliveryStatus(for deliveryDate: Date) -> String {\n    let calendar = Calendar.current\n    if calendar.isDateInToday(deliveryDate) {\n        return \"–°–µ–≥–æ–¥–Ω—è\"\n    } else if calendar.isDateInTomorrow(deliveryDate) {\n        return \"–ó–∞–≤—Ç—Ä–∞\"\n    } else {\n        return \"–ü–æ–∑–∂–µ\"\n    }\n}"
      ],
      [
        "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç–µ–≥–æ–≤ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É —Å —Ö–µ—à—Ç–µ–≥–∞–º–∏.\n/// - Parameter tags: –°–ø–∏—Å–æ–∫ —Ç–µ–≥–æ–≤.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Å —Ö–µ—à—Ç–µ–≥–∞–º–∏.\nfunc hashtags(from tags: [String]) -> String {\n    return tags.map { \"#\\($0.lowercased())\" }.joined(separator: \" \")\n}"
      ],
      [
        "/// –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é —Å–∫—Ä–æ–ª–ª–∞ –≤ —Å–ø–∏—Å–∫–µ —Ç–æ–≤–∞—Ä–æ–≤.\n/// - Parameter offset: –ó–Ω–∞—á–µ–Ω–∏–µ —Å–º–µ—â–µ–Ω–∏—è.\nfunc saveScrollOffset(_ offset: Double) {\n    UserDefaults.standard.set(offset, forKey: \"productListScrollOffset\")\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∑–æ–Ω–µ –¥–æ—Å—Ç–∞–≤–∫–∏ (–ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º).\n/// - Parameters:\n///   - lat: –®–∏—Ä–æ—Ç–∞.\n///   - lon: –î–æ–ª–≥–æ—Ç–∞.\n/// - Returns: true, –µ—Å–ª–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤—Ö–æ–¥—è—Ç –≤ —Ä–∞–¥–∏—É—Å.\nfunc isWithinDeliveryZone(lat: Double, lon: Double) -> Bool {\n    let center = (lat: 55.75, lon: 37.61) // –ú–æ—Å–∫–≤–∞\n    let radiusKm = 30.0\n    let distance = sqrt(pow(center.lat - lat, 2) + pow(center.lon - lon, 2)) * 111\n    return distance < radiusKm\n}"
      ],
      [
        "/// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç URL –¥–ª—è deeplink —Å –∑–∞–¥–∞–Ω–Ω—ã–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º —Ç–æ–≤–∞—Ä–∞.\n/// - Parameter productId: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä.\n/// - Returns: URL –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞.\nfunc generateProductDeeplink(productId: String) -> URL? {\n    return URL(string: \"myapp://product/\\(productId)\")\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏.\n/// - Parameter lastViewedId: –ü–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–π ID.\n/// - Parameter newMessageId: ID –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.\n/// - Returns: true, –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\nfunc hasNewSupportMessage(lastViewedId: String, newMessageId: String) -> Bool {\n    return lastViewedId != newMessageId\n}"
      ],
      [
        "/// –í—ã—á–∏—Å–ª—è–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Ü–µ–ª–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π).\n/// - Parameters:\n///   - current: –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.\n///   - target: –¶–µ–ª–µ–≤–∞—è —Å—É–º–º–∞.\n/// - Returns: –ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ç 0 –¥–æ 100.\nfunc progressPercentage(current: Double, target: Double) -> Int {\n    guard target > 0 else { return 0 }\n    return min(Int((current / target) * 100), 100)\n}"
      ],
      [
        "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ Terms & Conditions –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ª–æ–∫–∞–ª–∏.\n/// - Returns: URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É—Å–ª–æ–≤–∏–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.\nfunc termsAndConditionsURL() -> URL? {\n    let locale = Locale.current.languageCode ?? \"en\"\n    return URL(string: \"https://example.com/terms_\\(locale).html\")\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Å—Ç—É–ø–∏–ª–æ –ª–∏ –≤—Ä–µ–º—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è.\n/// - Parameter date: –î–∞—Ç–∞ —Å–æ–±—ã—Ç–∏—è.\n/// - Returns: true, –µ—Å–ª–∏ —Å–æ–±—ã—Ç–∏–µ —É–∂–µ –Ω–∞—á–∞–ª–æ—Å—å.\nfunc isEventStarted(at date: Date) -> Bool {\n    return Date() >= date\n}"
      ],
      [
        "/// –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ç–µ–º—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è.\n/// - Parameter theme: –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã.\nfunc saveUserTheme(_ theme: String) {\n    UserDefaults.standard.set(theme, forKey: \"appTheme\")\n}"
      ],
      [
        "/// –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é —Ç–µ–º—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è.\n/// - Returns: –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã –∏–ª–∏ nil.\nfunc getUserTheme() -> String? {\n    return UserDefaults.standard.string(forKey: \"appTheme\")\n}"
      ],
      [
        "/// –û—á–∏—â–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞.\nfunc clearUserSession() {\n    let keys = [\"authToken\", \"userProfile\", \"lastViewedProduct\"]\n    keys.forEach { UserDefaults.standard.removeObject(forKey: $0) }\n}"
      ],
      [
        "/// –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫—É –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ.\n/// - Returns: –¢–µ–∫—Å—Ç –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏.\nfunc generateFeedbackTemplate() -> String {\n    let systemVersion = UIDevice.current.systemVersion\n    let model = UIDevice.current.model\n    return \"–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: \\(model)\\n–í–µ—Ä—Å–∏—è iOS: \\(systemVersion)\\n–í–∞—à –æ—Ç–∑—ã–≤: \"\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –¥–æ—Å—Ç–∏–≥ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª–∏–º–∏—Ç–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π.\n/// - Parameter count: –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–π—Å—Ç–≤–∏–π.\n/// - Returns: true, –µ—Å–ª–∏ –ª–∏–º–∏—Ç –¥–æ—Å—Ç–∏–≥–Ω—É—Ç.\nfunc hasReachedFreeLimit(count: Int) -> Bool {\n    let limit = 5\n    return count >= limit\n}"
      ],
      [
        "/// –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫—É –¥–∞—Ç—ã –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–æ–≤.\n/// - Parameter date: –î–∞—Ç–∞.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ \"dd MMM yyyy\".\nfunc formatOrderDate(_ date: Date) -> String {\n    let formatter = DateFormatter()\n    formatter.dateFormat = \"dd MMM yyyy\"\n    return formatter.string(from: date)\n}"
      ],
      [
        "/// –í—ã—á–∏—Å–ª—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –º–µ–∂–¥—É –¥–≤—É–º—è –¥–∞—Ç–∞–º–∏.\n/// - Parameters:\n///   - from: –ù–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞.\n///   - to: –ö–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞.\n/// - Returns: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π.\nfunc daysBetween(_ from: Date, _ to: Date) -> Int {\n    return Calendar.current.dateComponents([.day], from: from, to: to).day ?? 0\n}"
      ],
      [
        "/// –°–æ—Ö—Ä–∞–Ω—è–µ—Ç ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–≥–æ –±–∞–Ω–Ω–µ—Ä–∞.\n/// - Parameter id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –±–∞–Ω–Ω–µ—Ä–∞.\nfunc saveLastSeenBannerId(_ id: String) {\n    UserDefaults.standard.set(id, forKey: \"lastSeenBannerId\")\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–ª–µ–¥—É–µ—Ç –ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.\n/// - Parameter lastUpdate: –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.\n/// - Returns: true, –µ—Å–ª–∏ –ø—Ä–æ—à–ª–æ –±–æ–ª—å—à–µ 6 —á–∞—Å–æ–≤.\nfunc shouldRefreshCache(since lastUpdate: Date) -> Bool {\n    return Date().timeIntervalSince(lastUpdate) > 6 * 3600\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–æ–∫–µ–Ω–∞ –≤ UserDefaults.\n/// - Returns: true, –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –Ω–µ –∏—Å—Ç—ë–∫.\nfunc isUserLoggedIn() -> Bool {\n    guard let token = UserDefaults.standard.string(forKey: \"authToken\") else { return false }\n    // –ó–¥–µ—Å—å –º–æ–≥–ª–∞ –±—ã –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞\n    return !token.isEmpty\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–º (–Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞—Ç—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏).\n/// - Parameter registrationDate: –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n/// - Returns: true, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –º–µ–Ω–µ–µ 7 –¥–Ω–µ–π –Ω–∞–∑–∞–¥.\nfunc isNewUser(registrationDate: Date) -> Bool {\n    return Date().timeIntervalSince(registrationDate) < 7 * 86400\n}"
      ],
      [
        "/// –ü–æ–ª—É—á–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—É—Å–∫–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n/// - Returns: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—É—Å–∫–æ–≤.\nfunc getAppLaunchCount() -> Int {\n    return UserDefaults.standard.integer(forKey: \"launchCount\")\n}"
      ],
      [
        "/// –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å—á—ë—Ç—á–∏–∫ –∑–∞–ø—É—Å–∫–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\nfunc incrementAppLaunchCount() {\n    let count = getAppLaunchCount() + 1\n    UserDefaults.standard.set(count, forKey: \"launchCount\")\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ Face ID –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ.\n/// - Returns: true, –µ—Å–ª–∏ Face ID –¥–æ—Å—Ç—É–ø–µ–Ω.\nfunc isFaceIDAvailable() -> Bool {\n    let context = LAContext()\n    var error: NSError?\n    return context.canEvaluatePolicy(.deviceOwnerAuthenticationWithBiometrics, error: &error) && context.biometryType == .faceID\n}"
      ],
      [
        "/// –ü–æ–ª—É—á–∞–µ—Ç –∏–º—è –º–µ—Å—è—Ü–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º –ø–æ –Ω–æ–º–µ—Ä—É.\n/// - Parameter month: –ù–æ–º–µ—Ä –º–µ—Å—è—Ü–∞ –æ—Ç 1 –¥–æ 12.\n/// - Returns: –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞.\nfunc monthName(for month: Int) -> String {\n    let formatter = DateFormatter()\n    formatter.locale = Locale(identifier: \"ru_RU\")\n    return formatter.monthSymbols[safe: month - 1] ?? \"\"\n}"
      ],
      [
        "/// –§–æ—Ä–º–∏—Ä—É–µ—Ç URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n/// - Parameter userId: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n/// - Returns: URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º userId.\nfunc ordersHistoryURL(for userId: String) -> URL? {\n    return URL(string: \"https://api.example.com/orders?user=\\(userId)\")\n}"
      ],
      [
        "/// –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ \"darkMode\".\n/// - Returns: true, –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–∞ —Ç—ë–º–Ω–∞—è —Ç–µ–º–∞.\nfunc isDarkModeEnabled() -> Bool {\n    return UserDefaults.standard.bool(forKey: \"darkMode\")\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –¥–æ—Å—Ç—É–ø –∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏.\n/// - Returns: true, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω.\nfunc isLocationAccessGranted() -> Bool {\n    return CLLocationManager.authorizationStatus() == .authorizedWhenInUse || CLLocationManager.authorizationStatus() == .authorizedAlways\n}"
      ],
      [
        "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å–µ–∫—É–Ω–¥—ã –≤ —Å—Ç—Ä–æ–∫—É —Ñ–æ—Ä–º–∞—Ç–∞ \"–º–º:—Å—Å\".\n/// - Parameter seconds: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥.\n/// - Returns: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\nfunc formatTime(seconds: Int) -> String {\n    return String(format: \"%02d:%02d\", seconds / 60, seconds % 60)\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–æ –ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –≤–≤–æ–¥–∞ PIN-–∫–æ–¥–∞.\n/// - Parameter attempts: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫.\n/// - Returns: true, –µ—Å–ª–∏ –ª–∏–º–∏—Ç –ø—Ä–µ–≤—ã—à–µ–Ω.\nfunc isPinAttemptsLimitExceeded(_ attempts: Int) -> Bool {\n    return attempts >= 3\n}"
      ],
      [
        "/// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫—É —Å—Ç–∞—Ç—É—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ —Ç–µ–∫—É—â–µ–º—É —ç—Ç–∞–ø—É.\n/// - Parameter status: –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å.\n/// - Returns: –°—Ç—Ä–æ–∫–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ.\nfunc deliveryStatusText(for status: String) -> String {\n    switch status {\n    case \"pending\": return \"–û–∂–∏–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏\"\n    case \"shipped\": return \"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ\"\n    case \"delivered\": return \"–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ\"\n    default: return \"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ\"\n    }\n}"
      ],
      [
        "/// –£–¥–∞–ª—è–µ—Ç –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã UserDefaults –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\nfunc resetAppData() {\n    if let appDomain = Bundle.main.bundleIdentifier {\n        UserDefaults.standard.removePersistentDomain(forName: appDomain)\n    }\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä API.\n/// - Parameter completion: –ó–∞–º—ã–∫–∞–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏.\nfunc pingServer(completion: @escaping (Bool) -> Void) {\n    let url = URL(string: \"https://api.example.com/ping\")!\n    URLSession.shared.dataTask(with: url) { _, response, error in\n        let httpResponse = response as? HTTPURLResponse\n        completion(httpResponse?.statusCode == 200 && error == nil)\n    }.resume()\n}"
      ],
      [
        "/// –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n/// - Parameter languageCode: –ö–æ–¥ —è–∑—ã–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, \"ru\", \"en\").\nfunc savePreferredLanguage(_ languageCode: String) {\n    UserDefaults.standard.set(languageCode, forKey: \"preferredLanguage\")\n}"
      ],
      [
        "/// –ü–æ–ª—É—á–∞–µ—Ç –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n/// - Returns: –ö–æ–¥ —è–∑—ã–∫–∞ –∏–ª–∏ \"ru\" –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.\nfunc getPreferredLanguage() -> String {\n    return UserDefaults.standard.string(forKey: \"preferredLanguage\") ?? \"ru\"\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —á–∏—Å–ª–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º, –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: true, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —á–∏—Å–ª–æ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π, false ‚Äî —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –∏–ª–∏ –Ω–µ —á–∏—Å–ª–æ.\nfunc isNonIntegerNumber(_ text: String) -> Bool {\n    if let number = Double(text) {\n        return floor(number) != number\n    }\n    return false\n}"
      ],
      [
        "/// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–π—Å—è —Å–∏–º–≤–æ–ª –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑.\n/// - Parameters:\n///   - character: –°–∏–º–≤–æ–ª –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è.\n///   - count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Å –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–º–∏—Å—è —Å–∏–º–≤–æ–ª–∞–º–∏.\nfunc repeatCharacter(_ character: Character, count: Int) -> String {\n    return String(repeating: String(character), count: count)\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –≤ –º–∞—Å—Å–∏–≤–µ —Å—Ç—Ä–æ–∫.\n/// - Parameters:\n///   - text: –°—Ç—Ä–æ–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.\n///   - array: –ú–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫.\n/// - Returns: true, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –≤ –º–∞—Å—Å–∏–≤–µ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑.\nfunc isUniqueString(_ text: String, in array: [String]) -> Bool {\n    return array.filter { $0 == text }.count == 1\n}"
      ],
      [
        "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ —Å –∑–∞–¥–∞–Ω–Ω—ã–º –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ–º –¥–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞ –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π.\n/// - Parameters:\n///   - text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n///   - decimals: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π.\n/// - Returns: –û–∫—Ä—É–≥–ª—ë–Ω–Ω–æ–µ —á–∏—Å–ª–æ.\nfunc roundedNumber(from text: String, decimals: Int) -> Double? {\n    guard let number = Double(text) else { return nil }\n    return round(number * pow(10, Double(decimals))) / pow(10, Double(decimals))\n}"
      ],
      [
        "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é –≤—Å–µ —Ü–∏—Ñ—Ä—ã –∏–∑ —Å—Ç—Ä–æ–∫–∏ –≤ –ø–æ—Ä—è–¥–∫–µ –∏—Ö –ø–æ—è–≤–ª–µ–Ω–∏—è.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –°—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã.\nfunc extractDigitsInOrder(from text: String) -> String {\n    return text.filter { $0.isNumber }\n}"
      ],
      [
        "/// –ü–µ—Ä–µ–≤–æ–¥–∏—Ç —Å—Ç—Ä–æ–∫—É –≤ \"–∫–æ–±–æ–ª—å–¥—Å–∫–∏–π\" —Ä–µ–≥–∏—Å—Ç—Ä (–∫–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ —Å –º–∞–ª–µ–Ω—å–∫–æ–π –±—É–∫–≤—ã, –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ).\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ –≤ \"–∫–æ–±–æ–ª—å–¥—Å–∫–æ–º\" —Ä–µ–≥–∏—Å—Ç—Ä–µ.\nfunc toCobolCase(_ text: String) -> String {\n    let words = text.split(separator: \" \").map { $0.lowercased() }\n    guard let first = words.first else { return \"\" }\n    return [first] + words.dropFirst().map { $0.capitalized }.joined(separator: \" \")\n}"
      ],
      [
        "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –≤—Å–µ—Ö —Å–∏–º–≤–æ–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –≤ –¥—Ä—É–≥–æ–π —Å—Ç—Ä–æ–∫–µ.\n/// - Parameters:\n///   - text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n///   - charactersToRemove: –°—Ç—Ä–æ–∫–∞ —Å —Å–∏–º–≤–æ–ª–∞–º–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ –±–µ–∑ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤.\nfunc removeCharactersFromString(_ text: String, charactersToRemove: String) -> String {\n    return text.filter { !charactersToRemove.contains($0) }\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø–æ–ª–Ω—ã–º —á–∏—Å–ª–æ–º –±–µ–∑ –¥–µ—Å—è—Ç–∏—á–Ω–æ–π —Ç–æ—á–∫–∏.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: true, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.\nfunc isWholeNumber(_ text: String) -> Bool {\n    return Int(text) != nil\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø–æ–¥—Å—Ç—Ä–æ–∫–æ–π –¥—Ä—É–≥–æ–π —Å—Ç—Ä–æ–∫–∏.\n/// - Parameters:\n///   - substring: –ü–æ–¥—Å—Ç—Ä–æ–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.\n///   - text: –ò—Å—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: true, –µ—Å–ª–∏ –ø–æ–¥—Å—Ç—Ä–æ–∫–∞ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å—Ç—Ä–æ–∫–µ.\nfunc containsSubstring(_ substring: String, in text: String) -> Bool {\n    return text.contains(substring)\n}"
      ],
      [
        "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ —Å —É—á—ë—Ç–æ–º –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –±—É–∫–≤ (–∫–∞–∂–¥–æ–µ –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã).\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –ú–∞—Å—Å–∏–≤ —Å–ª–æ–≤ —Å —É—á—ë—Ç–æ–º –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –±—É–∫–≤.\nfunc stringToCapitalizedWords(_ text: String) -> [String] {\n    return text.split(separator: \" \").map { $0.capitalized }\n}"
      ],
      [
        "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ —Å—Ç—Ä–æ–∫—É —Å —á–µ—Ä–µ–¥—É—é—â–∏–º–∏—Å—è –±—É–∫–≤–∞–º–∏ –≤ –≤–µ—Ä—Ö–Ω–µ–º –∏ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ö.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Å —á–µ—Ä–µ–¥—É—é—â–∏–º–∏—Å—è –∑–∞–≥–ª–∞–≤–Ω—ã–º–∏ –∏ —Å—Ç—Ä–æ—á–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏.\nfunc alternatingCase(_ text: String) -> String {\n    return String(text.enumerated().map { (index, character) in\n        index % 2 == 0 ? character.lowercased() : character.uppercased()\n    })\n}"
      ],
      [
        "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç—Ä–æ–∫—É.\n/// - Parameters:\n///   - substring: –ü–æ–¥—Å—Ç—Ä–æ–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞.\n///   - text: –ò—Å—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –ò–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ nil, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\nfunc indexOfSubstring(_ substring: String, in text: String) -> Int? {\n    return text.range(of: substring)?.lowerBound.utf16Offset(in: text)\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º, —É—á–∏—Ç—ã–≤–∞—è —Ç–æ–ª—å–∫–æ –∞–ª—Ñ–∞–≤–∏—Ç–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –∏ –∏–≥–Ω–æ—Ä–∏—Ä—É—è —Ä–µ–≥–∏—Å—Ç—Ä.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: true, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º.\nfunc isAlphaOnlyPalindrome(_ text: String) -> Bool {\n    let cleaned = text.lowercased().filter { $0.isLetter }\n    return cleaned == String(cleaned.reversed())\n}"
      ],
      [
        "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Ç–æ–ª—å–∫–æ –∑–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –°—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Ç–æ–ª—å–∫–æ –∑–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã.\nfunc extractUppercaseLetters(from text: String) -> String {\n    return text.filter { $0.isUppercase }\n}"
      ],
      [
        "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –≤ –¥–≤–æ–∏—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: true, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –¥–≤–æ–∏—á–Ω—ã–º —á–∏—Å–ª–æ–º.\nfunc isBinaryNumber(_ text: String) -> Bool {\n    return text.allSatisfy { $0 == \"0\" || $0 == \"1\" }\n}"
      ],
      [
        "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –ø–µ—Ä–≤—ã–º —Å–∏–º–≤–æ–ª–æ–º, –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–º –≤ –∑–∞–≥–ª–∞–≤–Ω—É—é –±—É–∫–≤—É.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Å –ø–µ—Ä–≤—ã–º —Å–∏–º–≤–æ–ª–æ–º –≤ –≤–µ—Ä—Ö–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.\nfunc capitalizeFirstLetter(_ text: String) -> String {\n    guard let first = text.first else { return text }\n    return first.uppercased() + text.dropFirst()\n}"
      ],
      [
        "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤, —Ä–∞–∑–±–∏–≤–∞—è –ø–æ –∫–∞–∂–¥–æ–º—É —Å–∏–º–≤–æ–ª—É.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –ú–∞—Å—Å–∏–≤ —Å–∏–º–≤–æ–ª–æ–≤.\nfunc stringToCharArray(_ text: String) -> [Character] {\n    return Array(text)\n}"
      ],
      [
        "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É, –∫–æ—Ç–æ—Ä–∞—è —è–≤–ª—è–µ—Ç—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑.\n/// - Parameters:\n///   - text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n///   - count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π.\n/// - Returns: –ü–æ–≤—Ç–æ—Ä—ë–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\nfunc repeatString(_ text: String, count: Int) -> String {\n    return String(repeating: text, count: count)\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ \"HH:mm\".\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: true, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –≤—Ä–µ–º–µ–Ω–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ \"HH:mm\".\nfunc isValidTime(_ text: String) -> Bool {\n    let pattern = \"^(2[0-3]|[01]?[0-9]):([0-5]?[0-9])$\"\n    return matchesRegex(text, pattern: pattern)\n}"
      ],
      [
        "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É, —Å–æ—Å—Ç–æ—è—â—É—é —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä –∏ —Å–∏–º–≤–æ–ª–æ–≤ —Ç–∏—Ä–µ, –µ—Å–ª–∏ –æ–Ω–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ —Å—Ç—Ä–æ–∫–µ.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Å —Ü–∏—Ñ—Ä–∞–º–∏ –∏ —Ç–∏—Ä–µ.\nfunc extractDigitsAndDashes(from text: String) -> String {\n    return text.filter { $0.isNumber || $0 == \"-\" }\n}"
      ],
      [
        "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ —Å–∏–º–≤–æ–ª—ã —Å—Ç—Ä–æ–∫–∏ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ, –∫—Ä–æ–º–µ —á–∏—Å–µ–ª.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Å –±—É–∫–≤–∞–º–∏ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.\nfunc lowercaseLettersWithoutNumbers(from text: String) -> String {\n    return text.filter { $0.isLetter }.lowercased()\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤—Å–µ –ª–∏ —Å—Ç—Ä–æ–∫–∏ –≤ –º–∞—Å—Å–∏–≤–µ –∏–º–µ—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—É—é –¥–ª–∏–Ω—É.\n/// - Parameter array: –ú–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫.\n/// - Returns: true, –µ—Å–ª–∏ –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–π –¥–ª–∏–Ω—ã.\nfunc allStringsHaveEqualLength(_ array: [String]) -> Bool {\n    guard let firstLength = array.first?.count else { return true }\n    return array.allSatisfy { $0.count == firstLength }\n}"
      ],
      [
        "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã—Ö –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º —Å–∏–º–≤–æ–ª–æ–º.\n/// - Parameters:\n///   - text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n///   - separator: –°–∏–º–≤–æ–ª –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è.\n/// - Returns: –ú–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫.\nfunc splitStringByCharacter(_ text: String, separator: Character) -> [String] {\n    return text.split(separator: separator).map { String($0) }\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —á–∏—Å–ª–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –≤ —à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–µ—Ä–∏—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: true, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —è–≤–ª—è–µ—Ç—Å—è —à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–µ—Ä–∏—á–Ω—ã–º —á–∏—Å–ª–æ–º.\nfunc isHexadecimalNumber(_ text: String) -> Bool {\n    let pattern = \"^[0-9A-Fa-f]+$\"\n    return matchesRegex(text, pattern: pattern)\n}"
      ],
      [
        "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –¥–∞—Ç—É —Å —É—á—ë—Ç–æ–º –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ \"yyyy-MM-dd HH:mm:ss\".\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –î–∞—Ç–∞, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É.\nfunc stringToDate(_ text: String) -> Date? {\n    let formatter = DateFormatter()\n    formatter.dateFormat = \"yyyy-MM-dd HH:mm:ss\"\n    return formatter.date(from: text)\n}"
      ],
      [
        "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ —Å—Ç—Ä–æ–∫—É —Å —É–¥–∞–ª—ë–Ω–Ω—ã–º–∏ –ø—Ä–æ–±–µ–ª–∞–º–∏, –∑–Ω–∞–∫–∞–º–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è –∏ —Å–∏–º–≤–æ–ª–∞–º–∏ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –∑–Ω–∞–∫–æ–≤ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è.\nfunc cleanString(_ text: String) -> String {\n    let charactersToRemove = CharacterSet.whitespacesAndNewlines.union(.punctuationCharacters)\n    return text.filter { !charactersToRemove.contains($0.unicodeScalars.first!) }\n}"
      ],
      [
        "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∑–∞–¥–∞–Ω–Ω–æ–π –±–∞–∑—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2 –¥–ª—è –¥–≤–æ–∏—á–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã).\n/// - Parameters:\n///   - text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n///   - base: –ë–∞–∑–∞ —á–∏—Å–ª–∞.\n/// - Returns: –ß–∏—Å–ª–æ –≤ –∑–∞–¥–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ —Å—á–∏—Å–ª–µ–Ω–∏—è.\nfunc stringToNumberWithBase(_ text: String, base: Int) -> Int? {\n    return Int(text, radix: base)\n}"
      ],
      [
        "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤ —Å–∏–º–≤–æ–ª–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤.\nfunc countUniqueCharacters(in text: String) -> Int {\n    return Set(text).count\n}"
      ],
      [
        "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É, —Å–æ—Å—Ç–æ—è—â—É—é –∏–∑ —Å–∏–º–≤–æ–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –≤ —Å—Ç—Ä–æ–∫–µ –Ω–µ –±–æ–ª–µ–µ –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–∞.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏.\nfunc uniqueCharactersOnly(in text: String) -> String {\n    let characterCount = text.reduce(into: [:]) { counts, char in counts[char, default: 0] += 1 }\n    return String(text.filter { characterCount[$0] == 1 })\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å—Ç—Ä–æ–∫–æ–π, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–µ–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email-–∞–¥—Ä–µ—Å.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: true, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ ‚Äî –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email.\nfunc isValidEmail(_ text: String) -> Bool {\n    let emailRegex = \"^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,}$\"\n    return matchesRegex(text, pattern: emailRegex)\n}"
      ],
      [
        "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É, –∫–æ—Ç–æ—Ä–∞—è —è–≤–ª—è–µ—Ç—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Å–∫–ª–µ–∏–≤–∞–Ω–∏—è –≤—Å–µ—Ö —á–∏—Å–µ–ª –∏–∑ —Å—Ç—Ä–æ–∫–∏.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –°—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞ –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏.\nfunc extractNumbersFromString(_ text: String) -> String {\n    return text.filter { $0.isNumber }\n}"
      ],
      [
        "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É —Å —á–∏—Å–ª–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –≤ –ø—Ä–æ—Ü–µ–Ω—Ç—ã.\n/// - Parameters:\n///   - text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n///   - precision: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Å –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º.\nfunc stringToPercentage(_ text: String, precision: Int) -> String? {\n    guard let number = Double(text) else { return nil }\n    let percentage = number * 100\n    return String(format: \"%.\\(precision)f%%\", percentage)\n}"
      ],
      [
        "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É, –≥–¥–µ —Å–∏–º–≤–æ–ª—ã —á–µ—Ä–µ–¥—É—é—Ç—Å—è –º–µ–∂–¥—É –≤–µ—Ä—Ö–Ω–∏–º –∏ –Ω–∏–∂–Ω–∏–º —Ä–µ–≥–∏—Å—Ç—Ä–æ–º.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –°—Ç—Ä–æ–∫–∞ —Å —á–µ—Ä–µ–¥—É—é—â–∏–º–∏—Å—è –±—É–∫–≤–∞–º–∏.\nfunc alternatingUpperAndLowerCase(_ text: String) -> String {\n    return String(text.enumerated().map { (index, char) in\n        index % 2 == 0 ? char.lowercased() : char.uppercased()\n    })\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —á–∏—Å–ª–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º, –≤–∫–ª—é—á–∞—è –¥–µ—Å—è—Ç–∏—á–Ω—É—é —Ç–æ—á–∫—É.\n/// - Parameter text: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: true, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º.\nfunc isNumeric(_ text: String) -> Bool {\n    return Double(text) != nil\n}"
      ],
      [
        "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.\n/// - Parameter array: –ú–∞—Å—Å–∏–≤.\n/// - Returns: –ú–∞—Å—Å–∏–≤ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.\nfunc reverseArray<T>(_ array: [T]) -> [T] {\n    return array.reversed()\n}"
      ],
      [
        "/// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–∑ —Å–ª–æ–≤–∞—Ä—è –ø–æ –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è–º.\n/// - Parameter dictionary: –°–ª–æ–≤–∞—Ä—å.\n/// - Returns: –°–ª—É—á–∞–π–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ª–æ–≤–∞—Ä—è.\nfunc randomElementFromDictionary<Key, Value>(_ dictionary: [Key: Value]) -> (Key, Value)? where Key: Hashable {\n    return dictionary.randomElement()\n}"
      ],
      [
        "/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª—é—á–∏ –∏–∑ —Å–ª–æ–≤–∞—Ä—è, –∫–æ—Ç–æ—Ä—ã–µ —Å–≤—è–∑–∞–Ω—ã —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏.\n/// - Parameter dictionary: –°–ª–æ–≤–∞—Ä—å.\n/// - Returns: –ö–ª—é—á–∏ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏.\nfunc keysWithMinValues<Key, Value>(_ dictionary: [Key: Value]) -> [Key] where Key: Hashable, Value: Comparable {\n    guard let minValue = dictionary.values.min() else { return [] }\n    return dictionary.filter { $0.value == minValue }.map { $0.key }\n}"
      ],
      [
        "/// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω–∞—è –¥–∞—Ç–∞ –≤ –±—É–¥—É—â–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ç–µ–∫—É—â–µ–π.\n/// - Parameter date: –î–∞—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.\n/// - Returns: `true`, –µ—Å–ª–∏ –¥–∞—Ç–∞ –≤ –±—É–¥—É—â–µ–º.\nfunc isFutureDate(_ date: Date) -> Bool {\n    return date > Date()\n}"
      ],
      [
        "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤ —Å–∏–º–≤–æ–ª–æ–≤, —Ñ–∏–ª—å—Ç—Ä—É—è —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã.\n/// - Parameter str: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –ú–∞—Å—Å–∏–≤ —Å–∏–º–≤–æ–ª–æ–≤, —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã.\nfunc stringToAlphabeticCharArray(_ str: String) -> [Character] {\n    return str.filter { $0.isLetter }\n}"
      ],
      [
        "/// –ù–∞—Ö–æ–¥–∏—Ç —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –¥–≤—É–º—è –¥–∞—Ç–∞–º–∏ –≤ –¥–Ω—è—Ö.\n/// - Parameters:\n///   - startDate: –ù–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞.\n///   - endDate: –ö–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞.\n/// - Returns: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –º–µ–∂–¥—É –¥–∞—Ç–∞–º–∏.\nfunc daysBetweenDates(startDate: Date, endDate: Date) -> Int {\n    return Calendar.current.dateComponents([.day], from: startDate, to: endDate).day ?? 0\n}"
      ],
      [
        "/// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–∞–º–∏, –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É–º–º—É.\n/// - Parameter str: –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.\n/// - Returns: –°—É–º–º–∞ —á–∏—Å–µ–ª –≤ —Å—Ç—Ä–æ–∫–µ.\nfunc sumOfNumbersInString(_ str: String) -> Int {\n    let numbers = str.split(separator: \" \").compactMap { Int($0) }\n    return numbers.reduce(0, +)\n}"
      ]
    ]
  }
}